// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * SignalFx AWS CloudWatch integrations using Role ARNs. For help with this integration see [Connect to AWS CloudWatch](https://docs.signalfx.com/en/latest/integrations/amazon-web-services.html#connect-to-aws).
 * 
 * > **NOTE** When managing integrations you'll need to use an admin token to authenticate the SignalFx provider.
 * 
 * > **WARNING** This resource implements a part of a workflow. You must use it with `signalfx.aws.Integration`. Check with SignalFx support for your realm's AWS account id.
 * 
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-signalfx/blob/master/website/docs/r/aws_external_integration.html.markdown.
 */
export class ExternalIntegration extends pulumi.CustomResource {
    /**
     * Get an existing ExternalIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExternalIntegrationState, opts?: pulumi.CustomResourceOptions): ExternalIntegration {
        return new ExternalIntegration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'signalfx:aws/externalIntegration:ExternalIntegration';

    /**
     * Returns true if the given object is an instance of ExternalIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExternalIntegration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExternalIntegration.__pulumiType;
    }

    /**
     * The external ID to use with your IAM role and with `signalfx.aws.Integration`.
     */
    public /*out*/ readonly externalId!: pulumi.Output<string>;
    /**
     * The name of this integration
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The AWS Account ARN to use with your policies/roles, provided by SignalFx.
     */
    public /*out*/ readonly signalfxAwsAccount!: pulumi.Output<string>;

    /**
     * Create a ExternalIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ExternalIntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExternalIntegrationArgs | ExternalIntegrationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ExternalIntegrationState | undefined;
            inputs["externalId"] = state ? state.externalId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["signalfxAwsAccount"] = state ? state.signalfxAwsAccount : undefined;
        } else {
            const args = argsOrState as ExternalIntegrationArgs | undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["externalId"] = undefined /*out*/;
            inputs["signalfxAwsAccount"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ExternalIntegration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExternalIntegration resources.
 */
export interface ExternalIntegrationState {
    /**
     * The external ID to use with your IAM role and with `signalfx.aws.Integration`.
     */
    readonly externalId?: pulumi.Input<string>;
    /**
     * The name of this integration
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The AWS Account ARN to use with your policies/roles, provided by SignalFx.
     */
    readonly signalfxAwsAccount?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExternalIntegration resource.
 */
export interface ExternalIntegrationArgs {
    /**
     * The name of this integration
     */
    readonly name?: pulumi.Input<string>;
}
