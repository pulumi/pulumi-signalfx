// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ExternalIntegrationArgs, ExternalIntegrationState } from "./externalIntegration";
export type ExternalIntegration = import("./externalIntegration").ExternalIntegration;
export const ExternalIntegration: typeof import("./externalIntegration").ExternalIntegration = null as any;
utilities.lazyLoad(exports, ["ExternalIntegration"], () => require("./externalIntegration"));

export { GetServicesArgs, GetServicesResult, GetServicesOutputArgs } from "./getServices";
export const getServices: typeof import("./getServices").getServices = null as any;
export const getServicesOutput: typeof import("./getServices").getServicesOutput = null as any;
utilities.lazyLoad(exports, ["getServices","getServicesOutput"], () => require("./getServices"));

export { IntegrationArgs, IntegrationState } from "./integration";
export type Integration = import("./integration").Integration;
export const Integration: typeof import("./integration").Integration = null as any;
utilities.lazyLoad(exports, ["Integration"], () => require("./integration"));

export { TokenIntegrationArgs, TokenIntegrationState } from "./tokenIntegration";
export type TokenIntegration = import("./tokenIntegration").TokenIntegration;
export const TokenIntegration: typeof import("./tokenIntegration").TokenIntegration = null as any;
utilities.lazyLoad(exports, ["TokenIntegration"], () => require("./tokenIntegration"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "signalfx:aws/externalIntegration:ExternalIntegration":
                return new ExternalIntegration(name, <any>undefined, { urn })
            case "signalfx:aws/integration:Integration":
                return new Integration(name, <any>undefined, { urn })
            case "signalfx:aws/tokenIntegration:TokenIntegration":
                return new TokenIntegration(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("signalfx", "aws/externalIntegration", _module)
pulumi.runtime.registerResourceModule("signalfx", "aws/integration", _module)
pulumi.runtime.registerResourceModule("signalfx", "aws/tokenIntegration", _module)
