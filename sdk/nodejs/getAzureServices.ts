// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/** @deprecated signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices */
export function getAzureServices(args?: GetAzureServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureServicesResult> {
    pulumi.log.warn("getAzureServices is deprecated: signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices")
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("signalfx:index/getAzureServices:getAzureServices", {
        "services": args.services,
    }, opts);
}

/**
 * A collection of arguments for invoking getAzureServices.
 */
export interface GetAzureServicesArgs {
    services?: inputs.GetAzureServicesService[];
}

/**
 * A collection of values returned by getAzureServices.
 */
export interface GetAzureServicesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly services?: outputs.GetAzureServicesService[];
}

export function getAzureServicesOutput(args?: GetAzureServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAzureServicesResult> {
    return pulumi.output(args).apply(a => getAzureServices(a, opts))
}

/**
 * A collection of arguments for invoking getAzureServices.
 */
export interface GetAzureServicesOutputArgs {
    services?: pulumi.Input<pulumi.Input<inputs.GetAzureServicesServiceArgs>[]>;
}
