// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ExemptMetricArgs, ExemptMetricState } from "./exemptMetric";
export type ExemptMetric = import("./exemptMetric").ExemptMetric;
export const ExemptMetric: typeof import("./exemptMetric").ExemptMetric = null as any;
utilities.lazyLoad(exports, ["ExemptMetric"], () => require("./exemptMetric"));

export { SettingsArgs, SettingsState } from "./settings";
export type Settings = import("./settings").Settings;
export const Settings: typeof import("./settings").Settings = null as any;
utilities.lazyLoad(exports, ["Settings"], () => require("./settings"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "signalfx:automatedarchival/exemptMetric:ExemptMetric":
                return new ExemptMetric(name, <any>undefined, { urn })
            case "signalfx:automatedarchival/settings:Settings":
                return new Settings(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("signalfx", "automatedarchival/exemptMetric", _module)
pulumi.runtime.registerResourceModule("signalfx", "automatedarchival/settings", _module)
