// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package signalfx

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a SignalFx detector resource. This can be used to create and manage detectors.
// 
// > **NOTE** If you're interested in using SignalFx detector features such as Historical Anomaly, Resource Running Out, or others then consider building them in the UI first then using the "Show SignalFlow" feature to extract the value for `programText`. You may also consult the [documentation for detector functions in signalflow-library](https://github.com/signalfx/signalflow-library/tree/master/library/signalfx/detectors).
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-signalfx/blob/master/website/docs/r/detector.html.markdown.
type Detector struct {
	pulumi.CustomResourceState

	// Team IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's team id (or user id in `authorizedWriterUsers`).
	AuthorizedWriterTeams pulumi.StringArrayOutput `pulumi:"authorizedWriterTeams"`
	// User IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's user id (or team id in `authorizedWriterTeams`).
	AuthorizedWriterUsers pulumi.StringArrayOutput `pulumi:"authorizedWriterUsers"`
	// Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// When `false`, the visualization may sample the output timeseries rather than displaying them all. `false` by default.
	DisableSampling pulumi.BoolPtrOutput `pulumi:"disableSampling"`
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	EndTime pulumi.IntPtrOutput `pulumi:"endTime"`
	// How long (in seconds) to wait for late datapoints. See [Delayed Datapoints](https://signalfx-product-docs.readthedocs-hosted.com/en/latest/charts/chart-builder.html#delayed-datapoints) for more info. Max value is `900` seconds (15 minutes). `Auto` (as little as possible) by default.
	MaxDelay pulumi.IntPtrOutput `pulumi:"maxDelay"`
	// Name of the detector.
	Name pulumi.StringOutput `pulumi:"name"`
	// Signalflow program text for the detector. More info [in the SignalFx docs](https://developers.signalfx.com/signalflow_analytics/signalflow_overview.html#_signalflow_programming_language).
	ProgramText pulumi.StringOutput `pulumi:"programText"`
	// Set of rules used for alerting.
	Rules DetectorRuleArrayOutput `pulumi:"rules"`
	// When `true`, markers will be drawn for each datapoint within the visualization. `true` by default.
	ShowDataMarkers pulumi.BoolPtrOutput `pulumi:"showDataMarkers"`
	// When `true`, the visualization will display a vertical line for each event trigger. `false` by default.
	ShowEventLines pulumi.BoolPtrOutput `pulumi:"showEventLines"`
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	StartTime pulumi.IntPtrOutput `pulumi:"startTime"`
	// Team IDs to associate the detector to.
	Teams pulumi.StringArrayOutput `pulumi:"teams"`
	// Seconds to display in the visualization. This is a rolling range from the current time. Example: `3600` corresponds to `-1h` in web UI. `3600` by default.
	TimeRange pulumi.IntPtrOutput `pulumi:"timeRange"`
	// URL of the detector
	Url pulumi.StringOutput `pulumi:"url"`
	// Plot-level customization options, associated with a publish statement.
	VizOptions DetectorVizOptionArrayOutput `pulumi:"vizOptions"`
}

// NewDetector registers a new resource with the given unique name, arguments, and options.
func NewDetector(ctx *pulumi.Context,
	name string, args *DetectorArgs, opts ...pulumi.ResourceOption) (*Detector, error) {
	if args == nil || args.ProgramText == nil {
		return nil, errors.New("missing required argument 'ProgramText'")
	}
	if args == nil || args.Rules == nil {
		return nil, errors.New("missing required argument 'Rules'")
	}
	if args == nil {
		args = &DetectorArgs{}
	}
	var resource Detector
	err := ctx.RegisterResource("signalfx:index/detector:Detector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDetector gets an existing Detector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDetector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DetectorState, opts ...pulumi.ResourceOption) (*Detector, error) {
	var resource Detector
	err := ctx.ReadResource("signalfx:index/detector:Detector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Detector resources.
type detectorState struct {
	// Team IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's team id (or user id in `authorizedWriterUsers`).
	AuthorizedWriterTeams []string `pulumi:"authorizedWriterTeams"`
	// User IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's user id (or team id in `authorizedWriterTeams`).
	AuthorizedWriterUsers []string `pulumi:"authorizedWriterUsers"`
	// Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
	Description *string `pulumi:"description"`
	// When `false`, the visualization may sample the output timeseries rather than displaying them all. `false` by default.
	DisableSampling *bool `pulumi:"disableSampling"`
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	EndTime *int `pulumi:"endTime"`
	// How long (in seconds) to wait for late datapoints. See [Delayed Datapoints](https://signalfx-product-docs.readthedocs-hosted.com/en/latest/charts/chart-builder.html#delayed-datapoints) for more info. Max value is `900` seconds (15 minutes). `Auto` (as little as possible) by default.
	MaxDelay *int `pulumi:"maxDelay"`
	// Name of the detector.
	Name *string `pulumi:"name"`
	// Signalflow program text for the detector. More info [in the SignalFx docs](https://developers.signalfx.com/signalflow_analytics/signalflow_overview.html#_signalflow_programming_language).
	ProgramText *string `pulumi:"programText"`
	// Set of rules used for alerting.
	Rules []DetectorRule `pulumi:"rules"`
	// When `true`, markers will be drawn for each datapoint within the visualization. `true` by default.
	ShowDataMarkers *bool `pulumi:"showDataMarkers"`
	// When `true`, the visualization will display a vertical line for each event trigger. `false` by default.
	ShowEventLines *bool `pulumi:"showEventLines"`
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	StartTime *int `pulumi:"startTime"`
	// Team IDs to associate the detector to.
	Teams []string `pulumi:"teams"`
	// Seconds to display in the visualization. This is a rolling range from the current time. Example: `3600` corresponds to `-1h` in web UI. `3600` by default.
	TimeRange *int `pulumi:"timeRange"`
	// URL of the detector
	Url *string `pulumi:"url"`
	// Plot-level customization options, associated with a publish statement.
	VizOptions []DetectorVizOption `pulumi:"vizOptions"`
}

type DetectorState struct {
	// Team IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's team id (or user id in `authorizedWriterUsers`).
	AuthorizedWriterTeams pulumi.StringArrayInput
	// User IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's user id (or team id in `authorizedWriterTeams`).
	AuthorizedWriterUsers pulumi.StringArrayInput
	// Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
	Description pulumi.StringPtrInput
	// When `false`, the visualization may sample the output timeseries rather than displaying them all. `false` by default.
	DisableSampling pulumi.BoolPtrInput
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	EndTime pulumi.IntPtrInput
	// How long (in seconds) to wait for late datapoints. See [Delayed Datapoints](https://signalfx-product-docs.readthedocs-hosted.com/en/latest/charts/chart-builder.html#delayed-datapoints) for more info. Max value is `900` seconds (15 minutes). `Auto` (as little as possible) by default.
	MaxDelay pulumi.IntPtrInput
	// Name of the detector.
	Name pulumi.StringPtrInput
	// Signalflow program text for the detector. More info [in the SignalFx docs](https://developers.signalfx.com/signalflow_analytics/signalflow_overview.html#_signalflow_programming_language).
	ProgramText pulumi.StringPtrInput
	// Set of rules used for alerting.
	Rules DetectorRuleArrayInput
	// When `true`, markers will be drawn for each datapoint within the visualization. `true` by default.
	ShowDataMarkers pulumi.BoolPtrInput
	// When `true`, the visualization will display a vertical line for each event trigger. `false` by default.
	ShowEventLines pulumi.BoolPtrInput
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	StartTime pulumi.IntPtrInput
	// Team IDs to associate the detector to.
	Teams pulumi.StringArrayInput
	// Seconds to display in the visualization. This is a rolling range from the current time. Example: `3600` corresponds to `-1h` in web UI. `3600` by default.
	TimeRange pulumi.IntPtrInput
	// URL of the detector
	Url pulumi.StringPtrInput
	// Plot-level customization options, associated with a publish statement.
	VizOptions DetectorVizOptionArrayInput
}

func (DetectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*detectorState)(nil)).Elem()
}

type detectorArgs struct {
	// Team IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's team id (or user id in `authorizedWriterUsers`).
	AuthorizedWriterTeams []string `pulumi:"authorizedWriterTeams"`
	// User IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's user id (or team id in `authorizedWriterTeams`).
	AuthorizedWriterUsers []string `pulumi:"authorizedWriterUsers"`
	// Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
	Description *string `pulumi:"description"`
	// When `false`, the visualization may sample the output timeseries rather than displaying them all. `false` by default.
	DisableSampling *bool `pulumi:"disableSampling"`
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	EndTime *int `pulumi:"endTime"`
	// How long (in seconds) to wait for late datapoints. See [Delayed Datapoints](https://signalfx-product-docs.readthedocs-hosted.com/en/latest/charts/chart-builder.html#delayed-datapoints) for more info. Max value is `900` seconds (15 minutes). `Auto` (as little as possible) by default.
	MaxDelay *int `pulumi:"maxDelay"`
	// Name of the detector.
	Name *string `pulumi:"name"`
	// Signalflow program text for the detector. More info [in the SignalFx docs](https://developers.signalfx.com/signalflow_analytics/signalflow_overview.html#_signalflow_programming_language).
	ProgramText string `pulumi:"programText"`
	// Set of rules used for alerting.
	Rules []DetectorRule `pulumi:"rules"`
	// When `true`, markers will be drawn for each datapoint within the visualization. `true` by default.
	ShowDataMarkers *bool `pulumi:"showDataMarkers"`
	// When `true`, the visualization will display a vertical line for each event trigger. `false` by default.
	ShowEventLines *bool `pulumi:"showEventLines"`
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	StartTime *int `pulumi:"startTime"`
	// Team IDs to associate the detector to.
	Teams []string `pulumi:"teams"`
	// Seconds to display in the visualization. This is a rolling range from the current time. Example: `3600` corresponds to `-1h` in web UI. `3600` by default.
	TimeRange *int `pulumi:"timeRange"`
	// Plot-level customization options, associated with a publish statement.
	VizOptions []DetectorVizOption `pulumi:"vizOptions"`
}

// The set of arguments for constructing a Detector resource.
type DetectorArgs struct {
	// Team IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's team id (or user id in `authorizedWriterUsers`).
	AuthorizedWriterTeams pulumi.StringArrayInput
	// User IDs that have write access to this detector. Remember to use an admin's token if using this feature and to include that admin's user id (or team id in `authorizedWriterTeams`).
	AuthorizedWriterUsers pulumi.StringArrayInput
	// Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
	Description pulumi.StringPtrInput
	// When `false`, the visualization may sample the output timeseries rather than displaying them all. `false` by default.
	DisableSampling pulumi.BoolPtrInput
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	EndTime pulumi.IntPtrInput
	// How long (in seconds) to wait for late datapoints. See [Delayed Datapoints](https://signalfx-product-docs.readthedocs-hosted.com/en/latest/charts/chart-builder.html#delayed-datapoints) for more info. Max value is `900` seconds (15 minutes). `Auto` (as little as possible) by default.
	MaxDelay pulumi.IntPtrInput
	// Name of the detector.
	Name pulumi.StringPtrInput
	// Signalflow program text for the detector. More info [in the SignalFx docs](https://developers.signalfx.com/signalflow_analytics/signalflow_overview.html#_signalflow_programming_language).
	ProgramText pulumi.StringInput
	// Set of rules used for alerting.
	Rules DetectorRuleArrayInput
	// When `true`, markers will be drawn for each datapoint within the visualization. `true` by default.
	ShowDataMarkers pulumi.BoolPtrInput
	// When `true`, the visualization will display a vertical line for each event trigger. `false` by default.
	ShowEventLines pulumi.BoolPtrInput
	// Seconds since epoch. Used for visualization. Conflicts with `timeRange`.
	StartTime pulumi.IntPtrInput
	// Team IDs to associate the detector to.
	Teams pulumi.StringArrayInput
	// Seconds to display in the visualization. This is a rolling range from the current time. Example: `3600` corresponds to `-1h` in web UI. `3600` by default.
	TimeRange pulumi.IntPtrInput
	// Plot-level customization options, associated with a publish statement.
	VizOptions DetectorVizOptionArrayInput
}

func (DetectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*detectorArgs)(nil)).Elem()
}

