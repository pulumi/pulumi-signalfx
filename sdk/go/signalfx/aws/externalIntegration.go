// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-signalfx/sdk/v7/go/signalfx/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExternalIntegration struct {
	pulumi.CustomResourceState

	// The external ID to use with your IAM role and with `aws.Integration`.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// The name of this integration
	Name pulumi.StringOutput `pulumi:"name"`
	// The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
	SignalfxAwsAccount pulumi.StringOutput `pulumi:"signalfxAwsAccount"`
}

// NewExternalIntegration registers a new resource with the given unique name, arguments, and options.
func NewExternalIntegration(ctx *pulumi.Context,
	name string, args *ExternalIntegrationArgs, opts ...pulumi.ResourceOption) (*ExternalIntegration, error) {
	if args == nil {
		args = &ExternalIntegrationArgs{}
	}

	secrets := pulumi.AdditionalSecretOutputs([]string{
		"externalId",
		"signalfxAwsAccount",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalIntegration
	err := ctx.RegisterResource("signalfx:aws/externalIntegration:ExternalIntegration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalIntegration gets an existing ExternalIntegration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalIntegrationState, opts ...pulumi.ResourceOption) (*ExternalIntegration, error) {
	var resource ExternalIntegration
	err := ctx.ReadResource("signalfx:aws/externalIntegration:ExternalIntegration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalIntegration resources.
type externalIntegrationState struct {
	// The external ID to use with your IAM role and with `aws.Integration`.
	ExternalId *string `pulumi:"externalId"`
	// The name of this integration
	Name *string `pulumi:"name"`
	// The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
	SignalfxAwsAccount *string `pulumi:"signalfxAwsAccount"`
}

type ExternalIntegrationState struct {
	// The external ID to use with your IAM role and with `aws.Integration`.
	ExternalId pulumi.StringPtrInput
	// The name of this integration
	Name pulumi.StringPtrInput
	// The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
	SignalfxAwsAccount pulumi.StringPtrInput
}

func (ExternalIntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalIntegrationState)(nil)).Elem()
}

type externalIntegrationArgs struct {
	// The name of this integration
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ExternalIntegration resource.
type ExternalIntegrationArgs struct {
	// The name of this integration
	Name pulumi.StringPtrInput
}

func (ExternalIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalIntegrationArgs)(nil)).Elem()
}

type ExternalIntegrationInput interface {
	pulumi.Input

	ToExternalIntegrationOutput() ExternalIntegrationOutput
	ToExternalIntegrationOutputWithContext(ctx context.Context) ExternalIntegrationOutput
}

func (*ExternalIntegration) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalIntegration)(nil)).Elem()
}

func (i *ExternalIntegration) ToExternalIntegrationOutput() ExternalIntegrationOutput {
	return i.ToExternalIntegrationOutputWithContext(context.Background())
}

func (i *ExternalIntegration) ToExternalIntegrationOutputWithContext(ctx context.Context) ExternalIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalIntegrationOutput)
}

// ExternalIntegrationArrayInput is an input type that accepts ExternalIntegrationArray and ExternalIntegrationArrayOutput values.
// You can construct a concrete instance of `ExternalIntegrationArrayInput` via:
//
//	ExternalIntegrationArray{ ExternalIntegrationArgs{...} }
type ExternalIntegrationArrayInput interface {
	pulumi.Input

	ToExternalIntegrationArrayOutput() ExternalIntegrationArrayOutput
	ToExternalIntegrationArrayOutputWithContext(context.Context) ExternalIntegrationArrayOutput
}

type ExternalIntegrationArray []ExternalIntegrationInput

func (ExternalIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalIntegration)(nil)).Elem()
}

func (i ExternalIntegrationArray) ToExternalIntegrationArrayOutput() ExternalIntegrationArrayOutput {
	return i.ToExternalIntegrationArrayOutputWithContext(context.Background())
}

func (i ExternalIntegrationArray) ToExternalIntegrationArrayOutputWithContext(ctx context.Context) ExternalIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalIntegrationArrayOutput)
}

// ExternalIntegrationMapInput is an input type that accepts ExternalIntegrationMap and ExternalIntegrationMapOutput values.
// You can construct a concrete instance of `ExternalIntegrationMapInput` via:
//
//	ExternalIntegrationMap{ "key": ExternalIntegrationArgs{...} }
type ExternalIntegrationMapInput interface {
	pulumi.Input

	ToExternalIntegrationMapOutput() ExternalIntegrationMapOutput
	ToExternalIntegrationMapOutputWithContext(context.Context) ExternalIntegrationMapOutput
}

type ExternalIntegrationMap map[string]ExternalIntegrationInput

func (ExternalIntegrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalIntegration)(nil)).Elem()
}

func (i ExternalIntegrationMap) ToExternalIntegrationMapOutput() ExternalIntegrationMapOutput {
	return i.ToExternalIntegrationMapOutputWithContext(context.Background())
}

func (i ExternalIntegrationMap) ToExternalIntegrationMapOutputWithContext(ctx context.Context) ExternalIntegrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalIntegrationMapOutput)
}

type ExternalIntegrationOutput struct{ *pulumi.OutputState }

func (ExternalIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalIntegration)(nil)).Elem()
}

func (o ExternalIntegrationOutput) ToExternalIntegrationOutput() ExternalIntegrationOutput {
	return o
}

func (o ExternalIntegrationOutput) ToExternalIntegrationOutputWithContext(ctx context.Context) ExternalIntegrationOutput {
	return o
}

// The external ID to use with your IAM role and with `aws.Integration`.
func (o ExternalIntegrationOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalIntegration) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// The name of this integration
func (o ExternalIntegrationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalIntegration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
func (o ExternalIntegrationOutput) SignalfxAwsAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalIntegration) pulumi.StringOutput { return v.SignalfxAwsAccount }).(pulumi.StringOutput)
}

type ExternalIntegrationArrayOutput struct{ *pulumi.OutputState }

func (ExternalIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalIntegration)(nil)).Elem()
}

func (o ExternalIntegrationArrayOutput) ToExternalIntegrationArrayOutput() ExternalIntegrationArrayOutput {
	return o
}

func (o ExternalIntegrationArrayOutput) ToExternalIntegrationArrayOutputWithContext(ctx context.Context) ExternalIntegrationArrayOutput {
	return o
}

func (o ExternalIntegrationArrayOutput) Index(i pulumi.IntInput) ExternalIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalIntegration {
		return vs[0].([]*ExternalIntegration)[vs[1].(int)]
	}).(ExternalIntegrationOutput)
}

type ExternalIntegrationMapOutput struct{ *pulumi.OutputState }

func (ExternalIntegrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalIntegration)(nil)).Elem()
}

func (o ExternalIntegrationMapOutput) ToExternalIntegrationMapOutput() ExternalIntegrationMapOutput {
	return o
}

func (o ExternalIntegrationMapOutput) ToExternalIntegrationMapOutputWithContext(ctx context.Context) ExternalIntegrationMapOutput {
	return o
}

func (o ExternalIntegrationMapOutput) MapIndex(k pulumi.StringInput) ExternalIntegrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalIntegration {
		return vs[0].(map[string]*ExternalIntegration)[vs[1].(string)]
	}).(ExternalIntegrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalIntegrationInput)(nil)).Elem(), &ExternalIntegration{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalIntegrationArrayInput)(nil)).Elem(), ExternalIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalIntegrationMapInput)(nil)).Elem(), ExternalIntegrationMap{})
	pulumi.RegisterOutputType(ExternalIntegrationOutput{})
	pulumi.RegisterOutputType(ExternalIntegrationArrayOutput{})
	pulumi.RegisterOutputType(ExternalIntegrationMapOutput{})
}
