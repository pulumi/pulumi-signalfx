// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package signalfx

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manage SignalFx [Data Links](https://docs.signalfx.com/en/latest/managing/data-links.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-signalfx/blob/master/website/docs/r/data_link.html.markdown.
type DataLink struct {
	pulumi.CustomResourceState

	// If provided, scopes this data link to the supplied dashboard id. If omitted then the link will be global.
	ContextDashboardId pulumi.StringPtrOutput `pulumi:"contextDashboardId"`
	// Name (key) of the metadata that's the trigger of a data link. If you specify `propertyValue`, you must specify `propertyName`.
	PropertyName pulumi.StringPtrOutput `pulumi:"propertyName"`
	// Value of the metadata that's the trigger of a data link. If you specify this property, you must also specify `propertyName`.
	PropertyValue pulumi.StringPtrOutput `pulumi:"propertyValue"`
	// Link to an external URL
	TargetExternalUrls DataLinkTargetExternalUrlArrayOutput `pulumi:"targetExternalUrls"`
	// Link to a SignalFx dashboard
	TargetSignalfxDashboards DataLinkTargetSignalfxDashboardArrayOutput `pulumi:"targetSignalfxDashboards"`
	// Link to an external URL
	TargetSplunks DataLinkTargetSplunkArrayOutput `pulumi:"targetSplunks"`
}

// NewDataLink registers a new resource with the given unique name, arguments, and options.
func NewDataLink(ctx *pulumi.Context,
	name string, args *DataLinkArgs, opts ...pulumi.ResourceOption) (*DataLink, error) {
	if args == nil {
		args = &DataLinkArgs{}
	}
	var resource DataLink
	err := ctx.RegisterResource("signalfx:index/dataLink:DataLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataLink gets an existing DataLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataLinkState, opts ...pulumi.ResourceOption) (*DataLink, error) {
	var resource DataLink
	err := ctx.ReadResource("signalfx:index/dataLink:DataLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataLink resources.
type dataLinkState struct {
	// If provided, scopes this data link to the supplied dashboard id. If omitted then the link will be global.
	ContextDashboardId *string `pulumi:"contextDashboardId"`
	// Name (key) of the metadata that's the trigger of a data link. If you specify `propertyValue`, you must specify `propertyName`.
	PropertyName *string `pulumi:"propertyName"`
	// Value of the metadata that's the trigger of a data link. If you specify this property, you must also specify `propertyName`.
	PropertyValue *string `pulumi:"propertyValue"`
	// Link to an external URL
	TargetExternalUrls []DataLinkTargetExternalUrl `pulumi:"targetExternalUrls"`
	// Link to a SignalFx dashboard
	TargetSignalfxDashboards []DataLinkTargetSignalfxDashboard `pulumi:"targetSignalfxDashboards"`
	// Link to an external URL
	TargetSplunks []DataLinkTargetSplunk `pulumi:"targetSplunks"`
}

type DataLinkState struct {
	// If provided, scopes this data link to the supplied dashboard id. If omitted then the link will be global.
	ContextDashboardId pulumi.StringPtrInput
	// Name (key) of the metadata that's the trigger of a data link. If you specify `propertyValue`, you must specify `propertyName`.
	PropertyName pulumi.StringPtrInput
	// Value of the metadata that's the trigger of a data link. If you specify this property, you must also specify `propertyName`.
	PropertyValue pulumi.StringPtrInput
	// Link to an external URL
	TargetExternalUrls DataLinkTargetExternalUrlArrayInput
	// Link to a SignalFx dashboard
	TargetSignalfxDashboards DataLinkTargetSignalfxDashboardArrayInput
	// Link to an external URL
	TargetSplunks DataLinkTargetSplunkArrayInput
}

func (DataLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLinkState)(nil)).Elem()
}

type dataLinkArgs struct {
	// If provided, scopes this data link to the supplied dashboard id. If omitted then the link will be global.
	ContextDashboardId *string `pulumi:"contextDashboardId"`
	// Name (key) of the metadata that's the trigger of a data link. If you specify `propertyValue`, you must specify `propertyName`.
	PropertyName *string `pulumi:"propertyName"`
	// Value of the metadata that's the trigger of a data link. If you specify this property, you must also specify `propertyName`.
	PropertyValue *string `pulumi:"propertyValue"`
	// Link to an external URL
	TargetExternalUrls []DataLinkTargetExternalUrl `pulumi:"targetExternalUrls"`
	// Link to a SignalFx dashboard
	TargetSignalfxDashboards []DataLinkTargetSignalfxDashboard `pulumi:"targetSignalfxDashboards"`
	// Link to an external URL
	TargetSplunks []DataLinkTargetSplunk `pulumi:"targetSplunks"`
}

// The set of arguments for constructing a DataLink resource.
type DataLinkArgs struct {
	// If provided, scopes this data link to the supplied dashboard id. If omitted then the link will be global.
	ContextDashboardId pulumi.StringPtrInput
	// Name (key) of the metadata that's the trigger of a data link. If you specify `propertyValue`, you must specify `propertyName`.
	PropertyName pulumi.StringPtrInput
	// Value of the metadata that's the trigger of a data link. If you specify this property, you must also specify `propertyName`.
	PropertyValue pulumi.StringPtrInput
	// Link to an external URL
	TargetExternalUrls DataLinkTargetExternalUrlArrayInput
	// Link to a SignalFx dashboard
	TargetSignalfxDashboards DataLinkTargetSignalfxDashboardArrayInput
	// Link to an external URL
	TargetSplunks DataLinkTargetSplunkArrayInput
}

func (DataLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLinkArgs)(nil)).Elem()
}

