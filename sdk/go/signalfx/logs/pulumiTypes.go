// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ListChartColumn struct {
	// Name of the chart.
	Name string `pulumi:"name"`
}

// ListChartColumnInput is an input type that accepts ListChartColumnArgs and ListChartColumnOutput values.
// You can construct a concrete instance of `ListChartColumnInput` via:
//
//	ListChartColumnArgs{...}
type ListChartColumnInput interface {
	pulumi.Input

	ToListChartColumnOutput() ListChartColumnOutput
	ToListChartColumnOutputWithContext(context.Context) ListChartColumnOutput
}

type ListChartColumnArgs struct {
	// Name of the chart.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ListChartColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListChartColumn)(nil)).Elem()
}

func (i ListChartColumnArgs) ToListChartColumnOutput() ListChartColumnOutput {
	return i.ToListChartColumnOutputWithContext(context.Background())
}

func (i ListChartColumnArgs) ToListChartColumnOutputWithContext(ctx context.Context) ListChartColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListChartColumnOutput)
}

// ListChartColumnArrayInput is an input type that accepts ListChartColumnArray and ListChartColumnArrayOutput values.
// You can construct a concrete instance of `ListChartColumnArrayInput` via:
//
//	ListChartColumnArray{ ListChartColumnArgs{...} }
type ListChartColumnArrayInput interface {
	pulumi.Input

	ToListChartColumnArrayOutput() ListChartColumnArrayOutput
	ToListChartColumnArrayOutputWithContext(context.Context) ListChartColumnArrayOutput
}

type ListChartColumnArray []ListChartColumnInput

func (ListChartColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListChartColumn)(nil)).Elem()
}

func (i ListChartColumnArray) ToListChartColumnArrayOutput() ListChartColumnArrayOutput {
	return i.ToListChartColumnArrayOutputWithContext(context.Background())
}

func (i ListChartColumnArray) ToListChartColumnArrayOutputWithContext(ctx context.Context) ListChartColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListChartColumnArrayOutput)
}

type ListChartColumnOutput struct{ *pulumi.OutputState }

func (ListChartColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListChartColumn)(nil)).Elem()
}

func (o ListChartColumnOutput) ToListChartColumnOutput() ListChartColumnOutput {
	return o
}

func (o ListChartColumnOutput) ToListChartColumnOutputWithContext(ctx context.Context) ListChartColumnOutput {
	return o
}

// Name of the chart.
func (o ListChartColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ListChartColumn) string { return v.Name }).(pulumi.StringOutput)
}

type ListChartColumnArrayOutput struct{ *pulumi.OutputState }

func (ListChartColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListChartColumn)(nil)).Elem()
}

func (o ListChartColumnArrayOutput) ToListChartColumnArrayOutput() ListChartColumnArrayOutput {
	return o
}

func (o ListChartColumnArrayOutput) ToListChartColumnArrayOutputWithContext(ctx context.Context) ListChartColumnArrayOutput {
	return o
}

func (o ListChartColumnArrayOutput) Index(i pulumi.IntInput) ListChartColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListChartColumn {
		return vs[0].([]ListChartColumn)[vs[1].(int)]
	}).(ListChartColumnOutput)
}

type ListChartSortOption struct {
	Descending bool   `pulumi:"descending"`
	Field      string `pulumi:"field"`
}

// ListChartSortOptionInput is an input type that accepts ListChartSortOptionArgs and ListChartSortOptionOutput values.
// You can construct a concrete instance of `ListChartSortOptionInput` via:
//
//	ListChartSortOptionArgs{...}
type ListChartSortOptionInput interface {
	pulumi.Input

	ToListChartSortOptionOutput() ListChartSortOptionOutput
	ToListChartSortOptionOutputWithContext(context.Context) ListChartSortOptionOutput
}

type ListChartSortOptionArgs struct {
	Descending pulumi.BoolInput   `pulumi:"descending"`
	Field      pulumi.StringInput `pulumi:"field"`
}

func (ListChartSortOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListChartSortOption)(nil)).Elem()
}

func (i ListChartSortOptionArgs) ToListChartSortOptionOutput() ListChartSortOptionOutput {
	return i.ToListChartSortOptionOutputWithContext(context.Background())
}

func (i ListChartSortOptionArgs) ToListChartSortOptionOutputWithContext(ctx context.Context) ListChartSortOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListChartSortOptionOutput)
}

// ListChartSortOptionArrayInput is an input type that accepts ListChartSortOptionArray and ListChartSortOptionArrayOutput values.
// You can construct a concrete instance of `ListChartSortOptionArrayInput` via:
//
//	ListChartSortOptionArray{ ListChartSortOptionArgs{...} }
type ListChartSortOptionArrayInput interface {
	pulumi.Input

	ToListChartSortOptionArrayOutput() ListChartSortOptionArrayOutput
	ToListChartSortOptionArrayOutputWithContext(context.Context) ListChartSortOptionArrayOutput
}

type ListChartSortOptionArray []ListChartSortOptionInput

func (ListChartSortOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListChartSortOption)(nil)).Elem()
}

func (i ListChartSortOptionArray) ToListChartSortOptionArrayOutput() ListChartSortOptionArrayOutput {
	return i.ToListChartSortOptionArrayOutputWithContext(context.Background())
}

func (i ListChartSortOptionArray) ToListChartSortOptionArrayOutputWithContext(ctx context.Context) ListChartSortOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListChartSortOptionArrayOutput)
}

type ListChartSortOptionOutput struct{ *pulumi.OutputState }

func (ListChartSortOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListChartSortOption)(nil)).Elem()
}

func (o ListChartSortOptionOutput) ToListChartSortOptionOutput() ListChartSortOptionOutput {
	return o
}

func (o ListChartSortOptionOutput) ToListChartSortOptionOutputWithContext(ctx context.Context) ListChartSortOptionOutput {
	return o
}

func (o ListChartSortOptionOutput) Descending() pulumi.BoolOutput {
	return o.ApplyT(func(v ListChartSortOption) bool { return v.Descending }).(pulumi.BoolOutput)
}

func (o ListChartSortOptionOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v ListChartSortOption) string { return v.Field }).(pulumi.StringOutput)
}

type ListChartSortOptionArrayOutput struct{ *pulumi.OutputState }

func (ListChartSortOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListChartSortOption)(nil)).Elem()
}

func (o ListChartSortOptionArrayOutput) ToListChartSortOptionArrayOutput() ListChartSortOptionArrayOutput {
	return o
}

func (o ListChartSortOptionArrayOutput) ToListChartSortOptionArrayOutputWithContext(ctx context.Context) ListChartSortOptionArrayOutput {
	return o
}

func (o ListChartSortOptionArrayOutput) Index(i pulumi.IntInput) ListChartSortOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListChartSortOption {
		return vs[0].([]ListChartSortOption)[vs[1].(int)]
	}).(ListChartSortOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ListChartColumnInput)(nil)).Elem(), ListChartColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListChartColumnArrayInput)(nil)).Elem(), ListChartColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListChartSortOptionInput)(nil)).Elem(), ListChartSortOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListChartSortOptionArrayInput)(nil)).Elem(), ListChartSortOptionArray{})
	pulumi.RegisterOutputType(ListChartColumnOutput{})
	pulumi.RegisterOutputType(ListChartColumnArrayOutput{})
	pulumi.RegisterOutputType(ListChartSortOptionOutput{})
	pulumi.RegisterOutputType(ListChartSortOptionArrayOutput{})
}
