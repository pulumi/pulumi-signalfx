// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SignalFx.Inputs
{

    public sealed class DashboardEventOverlayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Color to use
        /// </summary>
        [Input("color")]
        public Input<string>? Color { get; set; }

        /// <summary>
        /// The text displaying in the dropdown menu used to select this event overlay as an active overlay for the dashboard.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// (false by default) Whether a vertical line should be displayed in the plot at the time the event occurs
        /// </summary>
        [Input("line")]
        public Input<bool>? Line { get; set; }

        /// <summary>
        /// Search term used to define events
        /// </summary>
        [Input("signal", required: true)]
        public Input<string> Signal { get; set; } = null!;

        [Input("sources")]
        private InputList<Inputs.DashboardEventOverlaySourceArgs>? _sources;
        public InputList<Inputs.DashboardEventOverlaySourceArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.DashboardEventOverlaySourceArgs>());
            set => _sources = value;
        }

        /// <summary>
        /// Source for this event's data. Can be "eventTimeSeries" (default) or "detectorEvents".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public DashboardEventOverlayArgs()
        {
        }
        public static new DashboardEventOverlayArgs Empty => new DashboardEventOverlayArgs();
    }
}
