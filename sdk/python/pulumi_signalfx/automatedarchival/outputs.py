# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ExemptMetricExemptMetric',
]

@pulumi.output_type
class ExemptMetricExemptMetric(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "lastUpdated":
            suggest = "last_updated"
        elif key == "lastUpdatedBy":
            suggest = "last_updated_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExemptMetricExemptMetric. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExemptMetricExemptMetric.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExemptMetricExemptMetric.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 created: Optional[_builtins.int] = None,
                 creator: Optional[_builtins.str] = None,
                 last_updated: Optional[_builtins.int] = None,
                 last_updated_by: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: Name of the metric to be exempted from automated archival
        :param _builtins.int created: Timestamp of when the automated archival setting was created
        :param _builtins.str creator: ID of the creator of the automated archival setting
        :param _builtins.int last_updated: Timestamp of when the automated archival setting was last updated
        :param _builtins.str last_updated_by: ID of user who last updated the automated archival setting
        """
        pulumi.set(__self__, "name", name)
        if created is not None:
            pulumi.set(__self__, "created", created)
        if creator is not None:
            pulumi.set(__self__, "creator", creator)
        if last_updated is not None:
            pulumi.set(__self__, "last_updated", last_updated)
        if last_updated_by is not None:
            pulumi.set(__self__, "last_updated_by", last_updated_by)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Name of the metric to be exempted from automated archival
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def created(self) -> Optional[_builtins.int]:
        """
        Timestamp of when the automated archival setting was created
        """
        return pulumi.get(self, "created")

    @_builtins.property
    @pulumi.getter
    def creator(self) -> Optional[_builtins.str]:
        """
        ID of the creator of the automated archival setting
        """
        return pulumi.get(self, "creator")

    @_builtins.property
    @pulumi.getter(name="lastUpdated")
    def last_updated(self) -> Optional[_builtins.int]:
        """
        Timestamp of when the automated archival setting was last updated
        """
        return pulumi.get(self, "last_updated")

    @_builtins.property
    @pulumi.getter(name="lastUpdatedBy")
    def last_updated_by(self) -> Optional[_builtins.str]:
        """
        ID of user who last updated the automated archival setting
        """
        return pulumi.get(self, "last_updated_by")


