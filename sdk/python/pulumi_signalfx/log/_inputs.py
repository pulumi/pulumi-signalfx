# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ViewColumnArgs',
    'ViewSortOptionArgs',
]

@pulumi.input_type
class ViewColumnArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str]):
        """
        :param pulumi.Input[str] name: Name of the log view.
        """
        ViewColumnArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("name", name)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        Name of the log view.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class ViewSortOptionArgs:
    def __init__(__self__, *,
                 descending: pulumi.Input[bool],
                 field: pulumi.Input[str]):
        ViewSortOptionArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            descending=descending,
            field=field,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             descending: pulumi.Input[bool],
             field: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("descending", descending)
        _setter("field", field)

    @property
    @pulumi.getter
    def descending(self) -> pulumi.Input[bool]:
        return pulumi.get(self, "descending")

    @descending.setter
    def descending(self, value: pulumi.Input[bool]):
        pulumi.set(self, "descending", value)

    @property
    @pulumi.getter
    def field(self) -> pulumi.Input[str]:
        return pulumi.get(self, "field")

    @field.setter
    def field(self, value: pulumi.Input[str]):
        pulumi.set(self, "field", value)


