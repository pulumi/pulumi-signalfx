# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

warnings.warn("signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices", DeprecationWarning)
class GetAzureServicesResult:
    """
    A collection of values returned by getAzureServices.
    """
    def __init__(__self__, id=None, services=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if services and not isinstance(services, list):
            raise TypeError("Expected argument 'services' to be a list")
        __self__.services = services
class AwaitableGetAzureServicesResult(GetAzureServicesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAzureServicesResult(
            id=self.id,
            services=self.services)

def get_azure_services(services=None,opts=None):
    """
    Use this data source to access information about an existing resource.


    The **services** object supports the following:

      * `name` (`str`)
    """
    pulumi.log.warn("get_azure_services is deprecated: signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices")
    __args__ = dict()


    __args__['services'] = services
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('signalfx:index/getAzureServices:getAzureServices', __args__, opts=opts).value

    return AwaitableGetAzureServicesResult(
        id=__ret__.get('id'),
        services=__ret__.get('services'))
