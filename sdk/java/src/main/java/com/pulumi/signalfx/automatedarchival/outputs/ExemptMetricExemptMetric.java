// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.automatedarchival.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExemptMetricExemptMetric {
    /**
     * @return Timestamp of when the automated archival setting was created
     * 
     */
    private @Nullable Integer created;
    /**
     * @return ID of the creator of the automated archival setting
     * 
     */
    private @Nullable String creator;
    /**
     * @return Timestamp of when the automated archival setting was last updated
     * 
     */
    private @Nullable Integer lastUpdated;
    /**
     * @return ID of user who last updated the automated archival setting
     * 
     */
    private @Nullable String lastUpdatedBy;
    /**
     * @return Name of the metric to be exempted from automated archival
     * 
     */
    private String name;

    private ExemptMetricExemptMetric() {}
    /**
     * @return Timestamp of when the automated archival setting was created
     * 
     */
    public Optional<Integer> created() {
        return Optional.ofNullable(this.created);
    }
    /**
     * @return ID of the creator of the automated archival setting
     * 
     */
    public Optional<String> creator() {
        return Optional.ofNullable(this.creator);
    }
    /**
     * @return Timestamp of when the automated archival setting was last updated
     * 
     */
    public Optional<Integer> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }
    /**
     * @return ID of user who last updated the automated archival setting
     * 
     */
    public Optional<String> lastUpdatedBy() {
        return Optional.ofNullable(this.lastUpdatedBy);
    }
    /**
     * @return Name of the metric to be exempted from automated archival
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExemptMetricExemptMetric defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer created;
        private @Nullable String creator;
        private @Nullable Integer lastUpdated;
        private @Nullable String lastUpdatedBy;
        private String name;
        public Builder() {}
        public Builder(ExemptMetricExemptMetric defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.creator = defaults.creator;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.lastUpdatedBy = defaults.lastUpdatedBy;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder created(@Nullable Integer created) {

            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder creator(@Nullable String creator) {

            this.creator = creator;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(@Nullable Integer lastUpdated) {

            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedBy(@Nullable String lastUpdatedBy) {

            this.lastUpdatedBy = lastUpdatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ExemptMetricExemptMetric", "name");
            }
            this.name = name;
            return this;
        }
        public ExemptMetricExemptMetric build() {
            final var _resultValue = new ExemptMetricExemptMetric();
            _resultValue.created = created;
            _resultValue.creator = creator;
            _resultValue.lastUpdated = lastUpdated;
            _resultValue.lastUpdatedBy = lastUpdatedBy;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
