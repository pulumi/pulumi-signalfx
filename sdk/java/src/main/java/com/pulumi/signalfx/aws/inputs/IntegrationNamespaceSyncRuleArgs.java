// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationNamespaceSyncRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationNamespaceSyncRuleArgs Empty = new IntegrationNamespaceSyncRuleArgs();

    @Import(name="defaultAction")
    private @Nullable Output<String> defaultAction;

    public Optional<Output<String>> defaultAction() {
        return Optional.ofNullable(this.defaultAction);
    }

    @Import(name="filterAction")
    private @Nullable Output<String> filterAction;

    public Optional<Output<String>> filterAction() {
        return Optional.ofNullable(this.filterAction);
    }

    @Import(name="filterSource")
    private @Nullable Output<String> filterSource;

    public Optional<Output<String>> filterSource() {
        return Optional.ofNullable(this.filterSource);
    }

    @Import(name="namespace", required=true)
    private Output<String> namespace;

    public Output<String> namespace() {
        return this.namespace;
    }

    private IntegrationNamespaceSyncRuleArgs() {}

    private IntegrationNamespaceSyncRuleArgs(IntegrationNamespaceSyncRuleArgs $) {
        this.defaultAction = $.defaultAction;
        this.filterAction = $.filterAction;
        this.filterSource = $.filterSource;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationNamespaceSyncRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationNamespaceSyncRuleArgs $;

        public Builder() {
            $ = new IntegrationNamespaceSyncRuleArgs();
        }

        public Builder(IntegrationNamespaceSyncRuleArgs defaults) {
            $ = new IntegrationNamespaceSyncRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder defaultAction(@Nullable Output<String> defaultAction) {
            $.defaultAction = defaultAction;
            return this;
        }

        public Builder defaultAction(String defaultAction) {
            return defaultAction(Output.of(defaultAction));
        }

        public Builder filterAction(@Nullable Output<String> filterAction) {
            $.filterAction = filterAction;
            return this;
        }

        public Builder filterAction(String filterAction) {
            return filterAction(Output.of(filterAction));
        }

        public Builder filterSource(@Nullable Output<String> filterSource) {
            $.filterSource = filterSource;
            return this;
        }

        public Builder filterSource(String filterSource) {
            return filterSource(Output.of(filterSource));
        }

        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public IntegrationNamespaceSyncRuleArgs build() {
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("IntegrationNamespaceSyncRuleArgs", "namespace");
            }
            return $;
        }
    }

}
