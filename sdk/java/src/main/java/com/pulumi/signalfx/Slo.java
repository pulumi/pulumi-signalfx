// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.signalfx.SloArgs;
import com.pulumi.signalfx.Utilities;
import com.pulumi.signalfx.inputs.SloState;
import com.pulumi.signalfx.outputs.SloInput;
import com.pulumi.signalfx.outputs.SloTarget;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Splunk Observability Cloud slo resource. This can be used to create and manage SLOs.
 * 
 * To learn more about this feature take a look on [documentation for SLO](https://docs.splunk.com/observability/en/alerts-detectors-notifications/slo/slo-intro.html).
 * 
 * ## Example
 * 
 * ## Notification format
 * 
 * As Splunk Observability Cloud supports different notification mechanisms, use a comma-delimited string to provide inputs. If you want to specify multiple notifications, each must be a member in the list, like so:
 * 
 * See [Splunk Observability Cloud Docs](https://dev.splunk.com/observability/reference/api/detectors/latest) for more information.
 * 
 * Here are some example of how to configure each notification type:
 * 
 * ### Email
 * 
 * ### Jira
 * 
 * Note that the `credentialId` is the Splunk-provided ID shown after setting up your Jira integration. See also `signalfx.jira.Integration`.
 * 
 * ### OpsGenie
 * 
 * Note that the `credentialId` is the Splunk-provided ID shown after setting up your Opsgenie integration. `Team` here is hardcoded as the `responderType` as that is the only acceptable type as per the API docs.
 * 
 * ### PagerDuty
 * 
 * ### Slack
 * 
 * Exclude the `#` on the channel name:
 * 
 * ### Team
 * 
 * Sends [notifications to a team](https://docs.signalfx.com/en/latest/managing/teams/team-notifications.html).
 * 
 * ### TeamEmail
 * 
 * Sends an email to every member of a team.
 * 
 * ### Splunk On-Call (formerly VictorOps)
 * 
 * ### Webhooks
 * 
 * You need to include all the commas even if you only use a credential id.
 * 
 * You can either configure a Webhook to use an existing integration&#39;s credential id:
 * 
 * Or configure one inline:
 * 
 */
@ResourceType(type="signalfx:index/slo:Slo")
public class Slo extends com.pulumi.resources.CustomResource {
    /**
     * Description of the SLO.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the SLO.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Properties to configure an SLO object inputs
     * 
     */
    @Export(name="input", refs={SloInput.class}, tree="[0]")
    private Output<SloInput> input;

    /**
     * @return Properties to configure an SLO object inputs
     * 
     */
    public Output<SloInput> input() {
        return this.input;
    }
    /**
     * Name of the SLO. Each SLO name must be unique within an organization.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the SLO. Each SLO name must be unique within an organization.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Define target value of the service level indicator in the appropriate time period.
     * 
     */
    @Export(name="target", refs={SloTarget.class}, tree="[0]")
    private Output<SloTarget> target;

    /**
     * @return Define target value of the service level indicator in the appropriate time period.
     * 
     */
    public Output<SloTarget> target() {
        return this.target;
    }
    /**
     * Type of the SLO. Currently just: `&#34;RequestBased&#34;` is supported.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Type of the SLO. Currently just: `&#34;RequestBased&#34;` is supported.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Slo(String name) {
        this(name, SloArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Slo(String name, SloArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Slo(String name, SloArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:index/slo:Slo", name, args == null ? SloArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Slo(String name, Output<String> id, @Nullable SloState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:index/slo:Slo", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Slo get(String name, Output<String> id, @Nullable SloState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Slo(name, id, state, options);
    }
}
