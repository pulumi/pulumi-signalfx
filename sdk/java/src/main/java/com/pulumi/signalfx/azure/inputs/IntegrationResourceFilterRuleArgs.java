// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.signalfx.azure.inputs.IntegrationResourceFilterRuleFilterArgs;
import java.util.Objects;


public final class IntegrationResourceFilterRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationResourceFilterRuleArgs Empty = new IntegrationResourceFilterRuleArgs();

    @Import(name="filter", required=true)
    private Output<IntegrationResourceFilterRuleFilterArgs> filter;

    public Output<IntegrationResourceFilterRuleFilterArgs> filter() {
        return this.filter;
    }

    private IntegrationResourceFilterRuleArgs() {}

    private IntegrationResourceFilterRuleArgs(IntegrationResourceFilterRuleArgs $) {
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationResourceFilterRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationResourceFilterRuleArgs $;

        public Builder() {
            $ = new IntegrationResourceFilterRuleArgs();
        }

        public Builder(IntegrationResourceFilterRuleArgs defaults) {
            $ = new IntegrationResourceFilterRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder filter(Output<IntegrationResourceFilterRuleFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(IntegrationResourceFilterRuleFilterArgs filter) {
            return filter(Output.of(filter));
        }

        public IntegrationResourceFilterRuleArgs build() {
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            return $;
        }
    }

}
