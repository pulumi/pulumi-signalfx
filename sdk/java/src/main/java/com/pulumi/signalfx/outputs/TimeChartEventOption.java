// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TimeChartEventOption {
    /**
     * @return Color to use : gray, blue, azure, navy, brown, orange, yellow, iris, magenta, pink, purple, violet, lilac, emerald, green, aquamarine.
     * 
     */
    private final @Nullable String color;
    /**
     * @return Specifies an alternate value for the Plot Name column of the Data Table associated with the chart.
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return Label used in the publish statement that displays the event query you want to customize.
     * 
     */
    private final String label;

    @CustomType.Constructor
    private TimeChartEventOption(
        @CustomType.Parameter("color") @Nullable String color,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("label") String label) {
        this.color = color;
        this.displayName = displayName;
        this.label = label;
    }

    /**
     * @return Color to use : gray, blue, azure, navy, brown, orange, yellow, iris, magenta, pink, purple, violet, lilac, emerald, green, aquamarine.
     * 
     */
    public Optional<String> color() {
        return Optional.ofNullable(this.color);
    }
    /**
     * @return Specifies an alternate value for the Plot Name column of the Data Table associated with the chart.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Label used in the publish statement that displays the event query you want to customize.
     * 
     */
    public String label() {
        return this.label;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TimeChartEventOption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String color;
        private @Nullable String displayName;
        private String label;

        public Builder() {
    	      // Empty
        }

        public Builder(TimeChartEventOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.displayName = defaults.displayName;
    	      this.label = defaults.label;
        }

        public Builder color(@Nullable String color) {
            this.color = color;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }        public TimeChartEventOption build() {
            return new TimeChartEventOption(color, displayName, label);
        }
    }
}
