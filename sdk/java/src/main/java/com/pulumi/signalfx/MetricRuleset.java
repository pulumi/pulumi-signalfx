// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.signalfx.MetricRulesetArgs;
import com.pulumi.signalfx.Utilities;
import com.pulumi.signalfx.inputs.MetricRulesetState;
import com.pulumi.signalfx.outputs.MetricRulesetAggregationRule;
import com.pulumi.signalfx.outputs.MetricRulesetRoutingRule;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an Observability Cloud resource for managing metric rulesets
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.signalfx.MetricRuleset;
 * import com.pulumi.signalfx.MetricRulesetArgs;
 * import com.pulumi.signalfx.inputs.MetricRulesetAggregationRuleArgs;
 * import com.pulumi.signalfx.inputs.MetricRulesetRoutingRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var cpuUtilizationMetricRuleset = new MetricRuleset(&#34;cpuUtilizationMetricRuleset&#34;, MetricRulesetArgs.builder()        
 *             .aggregationRules(MetricRulesetAggregationRuleArgs.builder()
 *                 .aggregators(MetricRulesetAggregationRuleAggregatorArgs.builder()
 *                     .dimensions(&#34;service&#34;)
 *                     .dropDimensions(false)
 *                     .outputName(&#34;cpu.utilization.by.service.agg&#34;)
 *                     .type(&#34;rollup&#34;)
 *                     .build())
 *                 .enabled(true)
 *                 .matchers(MetricRulesetAggregationRuleMatcherArgs.builder()
 *                     .filters(MetricRulesetAggregationRuleMatcherFilterArgs.builder()
 *                         .not(false)
 *                         .property(&#34;realm&#34;)
 *                         .propertyValue(&#34;us-east-1&#34;)
 *                         .build())
 *                     .type(&#34;dimension&#34;)
 *                     .build())
 *                 .build())
 *             .metricName(&#34;cpu.utilization&#34;)
 *             .routingRule(MetricRulesetRoutingRuleArgs.builder()
 *                 .destination(&#34;RealTime&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="signalfx:index/metricRuleset:MetricRuleset")
public class MetricRuleset extends com.pulumi.resources.CustomResource {
    /**
     * List of aggregation rules for the metric
     * 
     */
    @Export(name="aggregationRules", type=List.class, parameters={MetricRulesetAggregationRule.class})
    private Output</* @Nullable */ List<MetricRulesetAggregationRule>> aggregationRules;

    /**
     * @return List of aggregation rules for the metric
     * 
     */
    public Output<Optional<List<MetricRulesetAggregationRule>>> aggregationRules() {
        return Codegen.optional(this.aggregationRules);
    }
    /**
     * Timestamp of when the metric ruleset was created
     * 
     */
    @Export(name="created", type=String.class, parameters={})
    private Output<String> created;

    /**
     * @return Timestamp of when the metric ruleset was created
     * 
     */
    public Output<String> created() {
        return this.created;
    }
    /**
     * ID of the creator of the metric ruleset
     * 
     */
    @Export(name="creator", type=String.class, parameters={})
    private Output<String> creator;

    /**
     * @return ID of the creator of the metric ruleset
     * 
     */
    public Output<String> creator() {
        return this.creator;
    }
    /**
     * Timestamp of when the metric ruleset was last updated
     * 
     */
    @Export(name="lastUpdated", type=String.class, parameters={})
    private Output<String> lastUpdated;

    /**
     * @return Timestamp of when the metric ruleset was last updated
     * 
     */
    public Output<String> lastUpdated() {
        return this.lastUpdated;
    }
    /**
     * ID of user who last updated the metric ruleset
     * 
     */
    @Export(name="lastUpdatedBy", type=String.class, parameters={})
    private Output<String> lastUpdatedBy;

    /**
     * @return ID of user who last updated the metric ruleset
     * 
     */
    public Output<String> lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    /**
     * Name of user who last updated this metric ruleset
     * 
     */
    @Export(name="lastUpdatedByName", type=String.class, parameters={})
    private Output<String> lastUpdatedByName;

    /**
     * @return Name of user who last updated this metric ruleset
     * 
     */
    public Output<String> lastUpdatedByName() {
        return this.lastUpdatedByName;
    }
    /**
     * Name of the input metric
     * 
     */
    @Export(name="metricName", type=String.class, parameters={})
    private Output<String> metricName;

    /**
     * @return Name of the input metric
     * 
     */
    public Output<String> metricName() {
        return this.metricName;
    }
    /**
     * Routing Rule object
     * 
     */
    @Export(name="routingRule", type=MetricRulesetRoutingRule.class, parameters={})
    private Output<MetricRulesetRoutingRule> routingRule;

    /**
     * @return Routing Rule object
     * 
     */
    public Output<MetricRulesetRoutingRule> routingRule() {
        return this.routingRule;
    }
    /**
     * Version of the ruleset
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return Version of the ruleset
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MetricRuleset(String name) {
        this(name, MetricRulesetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MetricRuleset(String name, MetricRulesetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MetricRuleset(String name, MetricRulesetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:index/metricRuleset:MetricRuleset", name, args == null ? MetricRulesetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MetricRuleset(String name, Output<String> id, @Nullable MetricRulesetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:index/metricRuleset:MetricRuleset", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MetricRuleset get(String name, Output<String> id, @Nullable MetricRulesetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MetricRuleset(name, id, state, options);
    }
}
