// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.signalfx.inputs.MetricRulesetExceptionRuleMatcherArgs;
import com.pulumi.signalfx.inputs.MetricRulesetExceptionRuleRestorationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricRulesetExceptionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricRulesetExceptionRuleArgs Empty = new MetricRulesetExceptionRuleArgs();

    /**
     * Information about an exception rule
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Information about an exception rule
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * When false, this rule will not route matched data to real-time
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return When false, this rule will not route matched data to real-time
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Matcher object
     * 
     */
    @Import(name="matchers", required=true)
    private Output<List<MetricRulesetExceptionRuleMatcherArgs>> matchers;

    /**
     * @return Matcher object
     * 
     */
    public Output<List<MetricRulesetExceptionRuleMatcherArgs>> matchers() {
        return this.matchers;
    }

    /**
     * name of the exception rule
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return name of the exception rule
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Properties of a restoration job
     * 
     */
    @Import(name="restorations")
    private @Nullable Output<List<MetricRulesetExceptionRuleRestorationArgs>> restorations;

    /**
     * @return Properties of a restoration job
     * 
     */
    public Optional<Output<List<MetricRulesetExceptionRuleRestorationArgs>>> restorations() {
        return Optional.ofNullable(this.restorations);
    }

    private MetricRulesetExceptionRuleArgs() {}

    private MetricRulesetExceptionRuleArgs(MetricRulesetExceptionRuleArgs $) {
        this.description = $.description;
        this.enabled = $.enabled;
        this.matchers = $.matchers;
        this.name = $.name;
        this.restorations = $.restorations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricRulesetExceptionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricRulesetExceptionRuleArgs $;

        public Builder() {
            $ = new MetricRulesetExceptionRuleArgs();
        }

        public Builder(MetricRulesetExceptionRuleArgs defaults) {
            $ = new MetricRulesetExceptionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Information about an exception rule
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Information about an exception rule
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled When false, this rule will not route matched data to real-time
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled When false, this rule will not route matched data to real-time
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param matchers Matcher object
         * 
         * @return builder
         * 
         */
        public Builder matchers(Output<List<MetricRulesetExceptionRuleMatcherArgs>> matchers) {
            $.matchers = matchers;
            return this;
        }

        /**
         * @param matchers Matcher object
         * 
         * @return builder
         * 
         */
        public Builder matchers(List<MetricRulesetExceptionRuleMatcherArgs> matchers) {
            return matchers(Output.of(matchers));
        }

        /**
         * @param matchers Matcher object
         * 
         * @return builder
         * 
         */
        public Builder matchers(MetricRulesetExceptionRuleMatcherArgs... matchers) {
            return matchers(List.of(matchers));
        }

        /**
         * @param name name of the exception rule
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name name of the exception rule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param restorations Properties of a restoration job
         * 
         * @return builder
         * 
         */
        public Builder restorations(@Nullable Output<List<MetricRulesetExceptionRuleRestorationArgs>> restorations) {
            $.restorations = restorations;
            return this;
        }

        /**
         * @param restorations Properties of a restoration job
         * 
         * @return builder
         * 
         */
        public Builder restorations(List<MetricRulesetExceptionRuleRestorationArgs> restorations) {
            return restorations(Output.of(restorations));
        }

        /**
         * @param restorations Properties of a restoration job
         * 
         * @return builder
         * 
         */
        public Builder restorations(MetricRulesetExceptionRuleRestorationArgs... restorations) {
            return restorations(List.of(restorations));
        }

        public MetricRulesetExceptionRuleArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("MetricRulesetExceptionRuleArgs", "enabled");
            }
            if ($.matchers == null) {
                throw new MissingRequiredPropertyException("MetricRulesetExceptionRuleArgs", "matchers");
            }
            return $;
        }
    }

}
