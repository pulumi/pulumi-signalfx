// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.signalfx.outputs.MetricRulesetAggregationRuleMatcherFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class MetricRulesetAggregationRuleMatcher {
    /**
     * @return List of filters to match on
     * 
     */
    private @Nullable List<MetricRulesetAggregationRuleMatcherFilter> filters;
    /**
     * @return The type of the matcher
     * 
     */
    private String type;

    private MetricRulesetAggregationRuleMatcher() {}
    /**
     * @return List of filters to match on
     * 
     */
    public List<MetricRulesetAggregationRuleMatcherFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The type of the matcher
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricRulesetAggregationRuleMatcher defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<MetricRulesetAggregationRuleMatcherFilter> filters;
        private String type;
        public Builder() {}
        public Builder(MetricRulesetAggregationRuleMatcher defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<MetricRulesetAggregationRuleMatcherFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(MetricRulesetAggregationRuleMatcherFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("MetricRulesetAggregationRuleMatcher", "type");
            }
            this.type = type;
            return this;
        }
        public MetricRulesetAggregationRuleMatcher build() {
            final var _resultValue = new MetricRulesetAggregationRuleMatcher();
            _resultValue.filters = filters;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
