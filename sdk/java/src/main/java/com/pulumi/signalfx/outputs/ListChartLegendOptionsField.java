// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListChartLegendOptionsField {
    /**
     * @return (true by default) Determines if this property is displayed in the data table.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return The name of a property to hide or show in the data table.
     * 
     */
    private String property;

    private ListChartLegendOptionsField() {}
    /**
     * @return (true by default) Determines if this property is displayed in the data table.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The name of a property to hide or show in the data table.
     * 
     */
    public String property() {
        return this.property;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListChartLegendOptionsField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enabled;
        private String property;
        public Builder() {}
        public Builder(ListChartLegendOptionsField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.property = defaults.property;
        }

        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder property(String property) {
            if (property == null) {
              throw new MissingRequiredPropertyException("ListChartLegendOptionsField", "property");
            }
            this.property = property;
            return this;
        }
        public ListChartLegendOptionsField build() {
            final var _resultValue = new ListChartLegendOptionsField();
            _resultValue.enabled = enabled;
            _resultValue.property = property;
            return _resultValue;
        }
    }
}
