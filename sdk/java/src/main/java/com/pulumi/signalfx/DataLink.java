// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.signalfx.DataLinkArgs;
import com.pulumi.signalfx.Utilities;
import com.pulumi.signalfx.inputs.DataLinkState;
import com.pulumi.signalfx.outputs.DataLinkTargetExternalUrl;
import com.pulumi.signalfx.outputs.DataLinkTargetSignalfxDashboard;
import com.pulumi.signalfx.outputs.DataLinkTargetSplunk;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manage Splunk Observability Cloud [Data Links](https://docs.signalfx.com/en/latest/managing/data-links.html).
 * 
 * ## Example
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.signalfx.DataLink;
 * import com.pulumi.signalfx.DataLinkArgs;
 * import com.pulumi.signalfx.inputs.DataLinkTargetSignalfxDashboardArgs;
 * import com.pulumi.signalfx.inputs.DataLinkTargetExternalUrlArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // A global link to Splunk Observability Cloud dashboard.
 *         var myDataLink = new DataLink("myDataLink", DataLinkArgs.builder()
 *             .propertyName("pname")
 *             .propertyValue("pvalue")
 *             .targetSignalfxDashboards(DataLinkTargetSignalfxDashboardArgs.builder()
 *                 .isDefault(true)
 *                 .name("sfx_dash")
 *                 .dashboardGroupId(mydashboardgroup0.id())
 *                 .dashboardId(mydashboard0.id())
 *                 .build())
 *             .build());
 * 
 *         // A dashboard-specific link to an external URL
 *         var myDataLinkDash = new DataLink("myDataLinkDash", DataLinkArgs.builder()
 *             .contextDashboardId(mydashboard0.id())
 *             .propertyName("pname2")
 *             .propertyValue("pvalue")
 *             .targetExternalUrls(DataLinkTargetExternalUrlArgs.builder()
 *                 .name("ex_url")
 *                 .timeFormat("ISO8601")
 *                 .url("https://www.example.com")
 *                 .propertyKeyMapping(Map.of("foo", "bar"))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="signalfx:index/dataLink:DataLink")
public class DataLink extends com.pulumi.resources.CustomResource {
    /**
     * If provided, scopes this data link to the supplied dashboard id. If omitted then the link will be global.
     * 
     */
    @Export(name="contextDashboardId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> contextDashboardId;

    /**
     * @return If provided, scopes this data link to the supplied dashboard id. If omitted then the link will be global.
     * 
     */
    public Output<Optional<String>> contextDashboardId() {
        return Codegen.optional(this.contextDashboardId);
    }
    /**
     * Name (key) of the metadata that&#39;s the trigger of a data link. If you specify `property_value`, you must specify `property_name`.
     * 
     */
    @Export(name="propertyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> propertyName;

    /**
     * @return Name (key) of the metadata that&#39;s the trigger of a data link. If you specify `property_value`, you must specify `property_name`.
     * 
     */
    public Output<Optional<String>> propertyName() {
        return Codegen.optional(this.propertyName);
    }
    /**
     * Value of the metadata that&#39;s the trigger of a data link. If you specify this property, you must also specify `property_name`.
     * 
     */
    @Export(name="propertyValue", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> propertyValue;

    /**
     * @return Value of the metadata that&#39;s the trigger of a data link. If you specify this property, you must also specify `property_name`.
     * 
     */
    public Output<Optional<String>> propertyValue() {
        return Codegen.optional(this.propertyValue);
    }
    /**
     * Link to an external URL
     * 
     */
    @Export(name="targetExternalUrls", refs={List.class,DataLinkTargetExternalUrl.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DataLinkTargetExternalUrl>> targetExternalUrls;

    /**
     * @return Link to an external URL
     * 
     */
    public Output<Optional<List<DataLinkTargetExternalUrl>>> targetExternalUrls() {
        return Codegen.optional(this.targetExternalUrls);
    }
    /**
     * Link to a Splunk Observability Cloud dashboard
     * 
     */
    @Export(name="targetSignalfxDashboards", refs={List.class,DataLinkTargetSignalfxDashboard.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DataLinkTargetSignalfxDashboard>> targetSignalfxDashboards;

    /**
     * @return Link to a Splunk Observability Cloud dashboard
     * 
     */
    public Output<Optional<List<DataLinkTargetSignalfxDashboard>>> targetSignalfxDashboards() {
        return Codegen.optional(this.targetSignalfxDashboards);
    }
    /**
     * Link to an external URL
     * 
     */
    @Export(name="targetSplunks", refs={List.class,DataLinkTargetSplunk.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DataLinkTargetSplunk>> targetSplunks;

    /**
     * @return Link to an external URL
     * 
     */
    public Output<Optional<List<DataLinkTargetSplunk>>> targetSplunks() {
        return Codegen.optional(this.targetSplunks);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataLink(java.lang.String name) {
        this(name, DataLinkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataLink(java.lang.String name, @Nullable DataLinkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataLink(java.lang.String name, @Nullable DataLinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:index/dataLink:DataLink", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DataLink(java.lang.String name, Output<java.lang.String> id, @Nullable DataLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:index/dataLink:DataLink", name, state, makeResourceOptions(options, id), false);
    }

    private static DataLinkArgs makeArgs(@Nullable DataLinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DataLinkArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataLink get(java.lang.String name, Output<java.lang.String> id, @Nullable DataLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataLink(name, id, state, options);
    }
}
