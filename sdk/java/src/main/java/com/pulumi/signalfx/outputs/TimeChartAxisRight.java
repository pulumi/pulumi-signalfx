// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.signalfx.outputs.TimeChartAxisRightWatermark;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TimeChartAxisRight {
    /**
     * @return A line to draw as a high watermark.
     * 
     */
    private final @Nullable Double highWatermark;
    /**
     * @return A label to attach to the high watermark line.
     * 
     */
    private final @Nullable String highWatermarkLabel;
    /**
     * @return Label used in the publish statement that displays the event query you want to customize.
     * 
     */
    private final @Nullable String label;
    /**
     * @return A line to draw as a low watermark.
     * 
     */
    private final @Nullable Double lowWatermark;
    /**
     * @return A label to attach to the low watermark line.
     * 
     */
    private final @Nullable String lowWatermarkLabel;
    /**
     * @return The maximum value for the right axis.
     * 
     */
    private final @Nullable Double maxValue;
    /**
     * @return The minimum value for the right axis.
     * 
     */
    private final @Nullable Double minValue;
    private final @Nullable List<TimeChartAxisRightWatermark> watermarks;

    @CustomType.Constructor
    private TimeChartAxisRight(
        @CustomType.Parameter("highWatermark") @Nullable Double highWatermark,
        @CustomType.Parameter("highWatermarkLabel") @Nullable String highWatermarkLabel,
        @CustomType.Parameter("label") @Nullable String label,
        @CustomType.Parameter("lowWatermark") @Nullable Double lowWatermark,
        @CustomType.Parameter("lowWatermarkLabel") @Nullable String lowWatermarkLabel,
        @CustomType.Parameter("maxValue") @Nullable Double maxValue,
        @CustomType.Parameter("minValue") @Nullable Double minValue,
        @CustomType.Parameter("watermarks") @Nullable List<TimeChartAxisRightWatermark> watermarks) {
        this.highWatermark = highWatermark;
        this.highWatermarkLabel = highWatermarkLabel;
        this.label = label;
        this.lowWatermark = lowWatermark;
        this.lowWatermarkLabel = lowWatermarkLabel;
        this.maxValue = maxValue;
        this.minValue = minValue;
        this.watermarks = watermarks;
    }

    /**
     * @return A line to draw as a high watermark.
     * 
     */
    public Optional<Double> highWatermark() {
        return Optional.ofNullable(this.highWatermark);
    }
    /**
     * @return A label to attach to the high watermark line.
     * 
     */
    public Optional<String> highWatermarkLabel() {
        return Optional.ofNullable(this.highWatermarkLabel);
    }
    /**
     * @return Label used in the publish statement that displays the event query you want to customize.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return A line to draw as a low watermark.
     * 
     */
    public Optional<Double> lowWatermark() {
        return Optional.ofNullable(this.lowWatermark);
    }
    /**
     * @return A label to attach to the low watermark line.
     * 
     */
    public Optional<String> lowWatermarkLabel() {
        return Optional.ofNullable(this.lowWatermarkLabel);
    }
    /**
     * @return The maximum value for the right axis.
     * 
     */
    public Optional<Double> maxValue() {
        return Optional.ofNullable(this.maxValue);
    }
    /**
     * @return The minimum value for the right axis.
     * 
     */
    public Optional<Double> minValue() {
        return Optional.ofNullable(this.minValue);
    }
    public List<TimeChartAxisRightWatermark> watermarks() {
        return this.watermarks == null ? List.of() : this.watermarks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TimeChartAxisRight defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Double highWatermark;
        private @Nullable String highWatermarkLabel;
        private @Nullable String label;
        private @Nullable Double lowWatermark;
        private @Nullable String lowWatermarkLabel;
        private @Nullable Double maxValue;
        private @Nullable Double minValue;
        private @Nullable List<TimeChartAxisRightWatermark> watermarks;

        public Builder() {
    	      // Empty
        }

        public Builder(TimeChartAxisRight defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.highWatermark = defaults.highWatermark;
    	      this.highWatermarkLabel = defaults.highWatermarkLabel;
    	      this.label = defaults.label;
    	      this.lowWatermark = defaults.lowWatermark;
    	      this.lowWatermarkLabel = defaults.lowWatermarkLabel;
    	      this.maxValue = defaults.maxValue;
    	      this.minValue = defaults.minValue;
    	      this.watermarks = defaults.watermarks;
        }

        public Builder highWatermark(@Nullable Double highWatermark) {
            this.highWatermark = highWatermark;
            return this;
        }
        public Builder highWatermarkLabel(@Nullable String highWatermarkLabel) {
            this.highWatermarkLabel = highWatermarkLabel;
            return this;
        }
        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }
        public Builder lowWatermark(@Nullable Double lowWatermark) {
            this.lowWatermark = lowWatermark;
            return this;
        }
        public Builder lowWatermarkLabel(@Nullable String lowWatermarkLabel) {
            this.lowWatermarkLabel = lowWatermarkLabel;
            return this;
        }
        public Builder maxValue(@Nullable Double maxValue) {
            this.maxValue = maxValue;
            return this;
        }
        public Builder minValue(@Nullable Double minValue) {
            this.minValue = minValue;
            return this;
        }
        public Builder watermarks(@Nullable List<TimeChartAxisRightWatermark> watermarks) {
            this.watermarks = watermarks;
            return this;
        }
        public Builder watermarks(TimeChartAxisRightWatermark... watermarks) {
            return watermarks(List.of(watermarks));
        }        public TimeChartAxisRight build() {
            return new TimeChartAxisRight(highWatermark, highWatermarkLabel, label, lowWatermark, lowWatermarkLabel, maxValue, minValue, watermarks);
        }
    }
}
