// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLinkTargetSignalfxDashboardArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLinkTargetSignalfxDashboardArgs Empty = new DataLinkTargetSignalfxDashboardArgs();

    @Import(name="dashboardGroupId", required=true)
    private Output<String> dashboardGroupId;

    public Output<String> dashboardGroupId() {
        return this.dashboardGroupId;
    }

    @Import(name="dashboardId", required=true)
    private Output<String> dashboardId;

    public Output<String> dashboardId() {
        return this.dashboardId;
    }

    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private DataLinkTargetSignalfxDashboardArgs() {}

    private DataLinkTargetSignalfxDashboardArgs(DataLinkTargetSignalfxDashboardArgs $) {
        this.dashboardGroupId = $.dashboardGroupId;
        this.dashboardId = $.dashboardId;
        this.isDefault = $.isDefault;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLinkTargetSignalfxDashboardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLinkTargetSignalfxDashboardArgs $;

        public Builder() {
            $ = new DataLinkTargetSignalfxDashboardArgs();
        }

        public Builder(DataLinkTargetSignalfxDashboardArgs defaults) {
            $ = new DataLinkTargetSignalfxDashboardArgs(Objects.requireNonNull(defaults));
        }

        public Builder dashboardGroupId(Output<String> dashboardGroupId) {
            $.dashboardGroupId = dashboardGroupId;
            return this;
        }

        public Builder dashboardGroupId(String dashboardGroupId) {
            return dashboardGroupId(Output.of(dashboardGroupId));
        }

        public Builder dashboardId(Output<String> dashboardId) {
            $.dashboardId = dashboardId;
            return this;
        }

        public Builder dashboardId(String dashboardId) {
            return dashboardId(Output.of(dashboardId));
        }

        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public DataLinkTargetSignalfxDashboardArgs build() {
            if ($.dashboardGroupId == null) {
                throw new MissingRequiredPropertyException("DataLinkTargetSignalfxDashboardArgs", "dashboardGroupId");
            }
            if ($.dashboardId == null) {
                throw new MissingRequiredPropertyException("DataLinkTargetSignalfxDashboardArgs", "dashboardId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DataLinkTargetSignalfxDashboardArgs", "name");
            }
            return $;
        }
    }

}
