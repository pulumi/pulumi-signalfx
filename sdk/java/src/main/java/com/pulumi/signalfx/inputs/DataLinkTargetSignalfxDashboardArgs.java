// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLinkTargetSignalfxDashboardArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLinkTargetSignalfxDashboardArgs Empty = new DataLinkTargetSignalfxDashboardArgs();

    /**
     * SignalFx-assigned ID of the dashboard link target&#39;s dashboard group
     * 
     */
    @Import(name="dashboardGroupId", required=true)
    private Output<String> dashboardGroupId;

    /**
     * @return SignalFx-assigned ID of the dashboard link target&#39;s dashboard group
     * 
     */
    public Output<String> dashboardGroupId() {
        return this.dashboardGroupId;
    }

    /**
     * SignalFx-assigned ID of the dashboard link target
     * 
     */
    @Import(name="dashboardId", required=true)
    private Output<String> dashboardId;

    /**
     * @return SignalFx-assigned ID of the dashboard link target
     * 
     */
    public Output<String> dashboardId() {
        return this.dashboardId;
    }

    /**
     * Flag that designates a target as the default for a data link object. `true` by default
     * 
     */
    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    /**
     * @return Flag that designates a target as the default for a data link object. `true` by default
     * 
     */
    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    /**
     * User-assigned target name. Use this value to differentiate between the link targets for a data link object.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return User-assigned target name. Use this value to differentiate between the link targets for a data link object.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private DataLinkTargetSignalfxDashboardArgs() {}

    private DataLinkTargetSignalfxDashboardArgs(DataLinkTargetSignalfxDashboardArgs $) {
        this.dashboardGroupId = $.dashboardGroupId;
        this.dashboardId = $.dashboardId;
        this.isDefault = $.isDefault;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLinkTargetSignalfxDashboardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLinkTargetSignalfxDashboardArgs $;

        public Builder() {
            $ = new DataLinkTargetSignalfxDashboardArgs();
        }

        public Builder(DataLinkTargetSignalfxDashboardArgs defaults) {
            $ = new DataLinkTargetSignalfxDashboardArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dashboardGroupId SignalFx-assigned ID of the dashboard link target&#39;s dashboard group
         * 
         * @return builder
         * 
         */
        public Builder dashboardGroupId(Output<String> dashboardGroupId) {
            $.dashboardGroupId = dashboardGroupId;
            return this;
        }

        /**
         * @param dashboardGroupId SignalFx-assigned ID of the dashboard link target&#39;s dashboard group
         * 
         * @return builder
         * 
         */
        public Builder dashboardGroupId(String dashboardGroupId) {
            return dashboardGroupId(Output.of(dashboardGroupId));
        }

        /**
         * @param dashboardId SignalFx-assigned ID of the dashboard link target
         * 
         * @return builder
         * 
         */
        public Builder dashboardId(Output<String> dashboardId) {
            $.dashboardId = dashboardId;
            return this;
        }

        /**
         * @param dashboardId SignalFx-assigned ID of the dashboard link target
         * 
         * @return builder
         * 
         */
        public Builder dashboardId(String dashboardId) {
            return dashboardId(Output.of(dashboardId));
        }

        /**
         * @param isDefault Flag that designates a target as the default for a data link object. `true` by default
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault Flag that designates a target as the default for a data link object. `true` by default
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param name User-assigned target name. Use this value to differentiate between the link targets for a data link object.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name User-assigned target name. Use this value to differentiate between the link targets for a data link object.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public DataLinkTargetSignalfxDashboardArgs build() {
            $.dashboardGroupId = Objects.requireNonNull($.dashboardGroupId, "expected parameter 'dashboardGroupId' to be non-null");
            $.dashboardId = Objects.requireNonNull($.dashboardId, "expected parameter 'dashboardId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
