// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamArgs Empty = new TeamArgs();

    /**
     * Description of the team (Optional)
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the team (Optional)
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Members of team
     * 
     */
    @Import(name="members")
    private @Nullable Output<List<String>> members;

    /**
     * @return Members of team
     * 
     */
    public Optional<Output<List<String>>> members() {
        return Optional.ofNullable(this.members);
    }

    /**
     * Name of the team
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the team
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of notification destinations to use for the critical alerts category.
     * 
     */
    @Import(name="notificationsCriticals")
    private @Nullable Output<List<String>> notificationsCriticals;

    /**
     * @return List of notification destinations to use for the critical alerts category.
     * 
     */
    public Optional<Output<List<String>>> notificationsCriticals() {
        return Optional.ofNullable(this.notificationsCriticals);
    }

    /**
     * List of notification destinations to use for the default alerts category.
     * 
     */
    @Import(name="notificationsDefaults")
    private @Nullable Output<List<String>> notificationsDefaults;

    /**
     * @return List of notification destinations to use for the default alerts category.
     * 
     */
    public Optional<Output<List<String>>> notificationsDefaults() {
        return Optional.ofNullable(this.notificationsDefaults);
    }

    /**
     * List of notification destinations to use for the info alerts category.
     * 
     */
    @Import(name="notificationsInfos")
    private @Nullable Output<List<String>> notificationsInfos;

    /**
     * @return List of notification destinations to use for the info alerts category.
     * 
     */
    public Optional<Output<List<String>>> notificationsInfos() {
        return Optional.ofNullable(this.notificationsInfos);
    }

    /**
     * List of notification destinations to use for the major alerts category.
     * 
     */
    @Import(name="notificationsMajors")
    private @Nullable Output<List<String>> notificationsMajors;

    /**
     * @return List of notification destinations to use for the major alerts category.
     * 
     */
    public Optional<Output<List<String>>> notificationsMajors() {
        return Optional.ofNullable(this.notificationsMajors);
    }

    /**
     * List of notification destinations to use for the minor alerts category.
     * 
     */
    @Import(name="notificationsMinors")
    private @Nullable Output<List<String>> notificationsMinors;

    /**
     * @return List of notification destinations to use for the minor alerts category.
     * 
     */
    public Optional<Output<List<String>>> notificationsMinors() {
        return Optional.ofNullable(this.notificationsMinors);
    }

    /**
     * List of notification destinations to use for the warning alerts category.
     * 
     */
    @Import(name="notificationsWarnings")
    private @Nullable Output<List<String>> notificationsWarnings;

    /**
     * @return List of notification destinations to use for the warning alerts category.
     * 
     */
    public Optional<Output<List<String>>> notificationsWarnings() {
        return Optional.ofNullable(this.notificationsWarnings);
    }

    private TeamArgs() {}

    private TeamArgs(TeamArgs $) {
        this.description = $.description;
        this.members = $.members;
        this.name = $.name;
        this.notificationsCriticals = $.notificationsCriticals;
        this.notificationsDefaults = $.notificationsDefaults;
        this.notificationsInfos = $.notificationsInfos;
        this.notificationsMajors = $.notificationsMajors;
        this.notificationsMinors = $.notificationsMinors;
        this.notificationsWarnings = $.notificationsWarnings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamArgs $;

        public Builder() {
            $ = new TeamArgs();
        }

        public Builder(TeamArgs defaults) {
            $ = new TeamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the team (Optional)
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the team (Optional)
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param members Members of team
         * 
         * @return builder
         * 
         */
        public Builder members(@Nullable Output<List<String>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members Members of team
         * 
         * @return builder
         * 
         */
        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        /**
         * @param members Members of team
         * 
         * @return builder
         * 
         */
        public Builder members(String... members) {
            return members(List.of(members));
        }

        /**
         * @param name Name of the team
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the team
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param notificationsCriticals List of notification destinations to use for the critical alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsCriticals(@Nullable Output<List<String>> notificationsCriticals) {
            $.notificationsCriticals = notificationsCriticals;
            return this;
        }

        /**
         * @param notificationsCriticals List of notification destinations to use for the critical alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsCriticals(List<String> notificationsCriticals) {
            return notificationsCriticals(Output.of(notificationsCriticals));
        }

        /**
         * @param notificationsCriticals List of notification destinations to use for the critical alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsCriticals(String... notificationsCriticals) {
            return notificationsCriticals(List.of(notificationsCriticals));
        }

        /**
         * @param notificationsDefaults List of notification destinations to use for the default alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsDefaults(@Nullable Output<List<String>> notificationsDefaults) {
            $.notificationsDefaults = notificationsDefaults;
            return this;
        }

        /**
         * @param notificationsDefaults List of notification destinations to use for the default alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsDefaults(List<String> notificationsDefaults) {
            return notificationsDefaults(Output.of(notificationsDefaults));
        }

        /**
         * @param notificationsDefaults List of notification destinations to use for the default alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsDefaults(String... notificationsDefaults) {
            return notificationsDefaults(List.of(notificationsDefaults));
        }

        /**
         * @param notificationsInfos List of notification destinations to use for the info alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsInfos(@Nullable Output<List<String>> notificationsInfos) {
            $.notificationsInfos = notificationsInfos;
            return this;
        }

        /**
         * @param notificationsInfos List of notification destinations to use for the info alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsInfos(List<String> notificationsInfos) {
            return notificationsInfos(Output.of(notificationsInfos));
        }

        /**
         * @param notificationsInfos List of notification destinations to use for the info alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsInfos(String... notificationsInfos) {
            return notificationsInfos(List.of(notificationsInfos));
        }

        /**
         * @param notificationsMajors List of notification destinations to use for the major alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsMajors(@Nullable Output<List<String>> notificationsMajors) {
            $.notificationsMajors = notificationsMajors;
            return this;
        }

        /**
         * @param notificationsMajors List of notification destinations to use for the major alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsMajors(List<String> notificationsMajors) {
            return notificationsMajors(Output.of(notificationsMajors));
        }

        /**
         * @param notificationsMajors List of notification destinations to use for the major alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsMajors(String... notificationsMajors) {
            return notificationsMajors(List.of(notificationsMajors));
        }

        /**
         * @param notificationsMinors List of notification destinations to use for the minor alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsMinors(@Nullable Output<List<String>> notificationsMinors) {
            $.notificationsMinors = notificationsMinors;
            return this;
        }

        /**
         * @param notificationsMinors List of notification destinations to use for the minor alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsMinors(List<String> notificationsMinors) {
            return notificationsMinors(Output.of(notificationsMinors));
        }

        /**
         * @param notificationsMinors List of notification destinations to use for the minor alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsMinors(String... notificationsMinors) {
            return notificationsMinors(List.of(notificationsMinors));
        }

        /**
         * @param notificationsWarnings List of notification destinations to use for the warning alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsWarnings(@Nullable Output<List<String>> notificationsWarnings) {
            $.notificationsWarnings = notificationsWarnings;
            return this;
        }

        /**
         * @param notificationsWarnings List of notification destinations to use for the warning alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsWarnings(List<String> notificationsWarnings) {
            return notificationsWarnings(Output.of(notificationsWarnings));
        }

        /**
         * @param notificationsWarnings List of notification destinations to use for the warning alerts category.
         * 
         * @return builder
         * 
         */
        public Builder notificationsWarnings(String... notificationsWarnings) {
            return notificationsWarnings(List.of(notificationsWarnings));
        }

        public TeamArgs build() {
            return $;
        }
    }

}
