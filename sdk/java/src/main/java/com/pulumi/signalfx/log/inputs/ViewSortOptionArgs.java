// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class ViewSortOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ViewSortOptionArgs Empty = new ViewSortOptionArgs();

    /**
     * Name of the column
     * 
     */
    @Import(name="descending", required=true)
    private Output<Boolean> descending;

    /**
     * @return Name of the column
     * 
     */
    public Output<Boolean> descending() {
        return this.descending;
    }

    /**
     * Name of the column
     * 
     */
    @Import(name="field", required=true)
    private Output<String> field;

    /**
     * @return Name of the column
     * 
     */
    public Output<String> field() {
        return this.field;
    }

    private ViewSortOptionArgs() {}

    private ViewSortOptionArgs(ViewSortOptionArgs $) {
        this.descending = $.descending;
        this.field = $.field;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ViewSortOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ViewSortOptionArgs $;

        public Builder() {
            $ = new ViewSortOptionArgs();
        }

        public Builder(ViewSortOptionArgs defaults) {
            $ = new ViewSortOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param descending Name of the column
         * 
         * @return builder
         * 
         */
        public Builder descending(Output<Boolean> descending) {
            $.descending = descending;
            return this;
        }

        /**
         * @param descending Name of the column
         * 
         * @return builder
         * 
         */
        public Builder descending(Boolean descending) {
            return descending(Output.of(descending));
        }

        /**
         * @param field Name of the column
         * 
         * @return builder
         * 
         */
        public Builder field(Output<String> field) {
            $.field = field;
            return this;
        }

        /**
         * @param field Name of the column
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            return field(Output.of(field));
        }

        public ViewSortOptionArgs build() {
            if ($.descending == null) {
                throw new MissingRequiredPropertyException("ViewSortOptionArgs", "descending");
            }
            if ($.field == null) {
                throw new MissingRequiredPropertyException("ViewSortOptionArgs", "field");
            }
            return $;
        }
    }

}
