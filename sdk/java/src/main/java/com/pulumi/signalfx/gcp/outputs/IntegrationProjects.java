// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.gcp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IntegrationProjects {
    /**
     * @return List of project IDs to synchronize metrics and metadata from. Use only if you don&#39;t want to automatically synchronize all projects.
     * 
     */
    private @Nullable List<String> selectedProjectIds;
    /**
     * @return What mode of synchronizing projects should be used. Sync all tries to synchronize metrics and metadata from all discoverable projects.
     * 
     */
    private @Nullable String syncMode;

    private IntegrationProjects() {}
    /**
     * @return List of project IDs to synchronize metrics and metadata from. Use only if you don&#39;t want to automatically synchronize all projects.
     * 
     */
    public List<String> selectedProjectIds() {
        return this.selectedProjectIds == null ? List.of() : this.selectedProjectIds;
    }
    /**
     * @return What mode of synchronizing projects should be used. Sync all tries to synchronize metrics and metadata from all discoverable projects.
     * 
     */
    public Optional<String> syncMode() {
        return Optional.ofNullable(this.syncMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationProjects defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> selectedProjectIds;
        private @Nullable String syncMode;
        public Builder() {}
        public Builder(IntegrationProjects defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.selectedProjectIds = defaults.selectedProjectIds;
    	      this.syncMode = defaults.syncMode;
        }

        @CustomType.Setter
        public Builder selectedProjectIds(@Nullable List<String> selectedProjectIds) {

            this.selectedProjectIds = selectedProjectIds;
            return this;
        }
        public Builder selectedProjectIds(String... selectedProjectIds) {
            return selectedProjectIds(List.of(selectedProjectIds));
        }
        @CustomType.Setter
        public Builder syncMode(@Nullable String syncMode) {

            this.syncMode = syncMode;
            return this;
        }
        public IntegrationProjects build() {
            final var _resultValue = new IntegrationProjects();
            _resultValue.selectedProjectIds = selectedProjectIds;
            _resultValue.syncMode = syncMode;
            return _resultValue;
        }
    }
}
