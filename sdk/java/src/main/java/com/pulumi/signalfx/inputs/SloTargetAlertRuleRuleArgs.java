// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.signalfx.inputs.SloTargetAlertRuleRuleParametersArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SloTargetAlertRuleRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SloTargetAlertRuleRuleArgs Empty = new SloTargetAlertRuleRuleArgs();

    /**
     * Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * When true, notifications and events will not be generated for the detect label. `false` by default.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return When true, notifications and events will not be generated for the detect label. `false` by default.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * List of strings specifying where notifications will be sent when an incident occurs. See [Create SLO](https://dev.splunk.com/observability/reference/api/slo/latest#endpoint-create-new-slo) for more info.
     * 
     */
    @Import(name="notifications")
    private @Nullable Output<List<String>> notifications;

    /**
     * @return List of strings specifying where notifications will be sent when an incident occurs. See [Create SLO](https://dev.splunk.com/observability/reference/api/slo/latest#endpoint-create-new-slo) for more info.
     * 
     */
    public Optional<Output<List<String>>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    /**
     * Custom notification message body when an alert is triggered. See [Alert message](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#alert-messages) for more info.
     * 
     */
    @Import(name="parameterizedBody")
    private @Nullable Output<String> parameterizedBody;

    /**
     * @return Custom notification message body when an alert is triggered. See [Alert message](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#alert-messages) for more info.
     * 
     */
    public Optional<Output<String>> parameterizedBody() {
        return Optional.ofNullable(this.parameterizedBody);
    }

    /**
     * Custom notification message subject when an alert is triggered. See [Alert message](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#alert-messages) for more info.
     * 
     */
    @Import(name="parameterizedSubject")
    private @Nullable Output<String> parameterizedSubject;

    /**
     * @return Custom notification message subject when an alert is triggered. See [Alert message](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#alert-messages) for more info.
     * 
     */
    public Optional<Output<String>> parameterizedSubject() {
        return Optional.ofNullable(this.parameterizedSubject);
    }

    /**
     * Parameters for the SLO alert rule. Each SLO alert rule type accepts different parameters. If not specified, default parameters are used.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<SloTargetAlertRuleRuleParametersArgs> parameters;

    /**
     * @return Parameters for the SLO alert rule. Each SLO alert rule type accepts different parameters. If not specified, default parameters are used.
     * 
     */
    public Optional<Output<SloTargetAlertRuleRuleParametersArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * URL of page to consult when an alert is triggered. This can be used with custom notification messages.
     * 
     */
    @Import(name="runbookUrl")
    private @Nullable Output<String> runbookUrl;

    /**
     * @return URL of page to consult when an alert is triggered. This can be used with custom notification messages.
     * 
     */
    public Optional<Output<String>> runbookUrl() {
        return Optional.ofNullable(this.runbookUrl);
    }

    /**
     * The severity of the rule, must be one of: `&#34;Critical&#34;`, `&#34;Major&#34;`, `&#34;Minor&#34;`, `&#34;Warning&#34;`, `&#34;Info&#34;`.
     * 
     */
    @Import(name="severity", required=true)
    private Output<String> severity;

    /**
     * @return The severity of the rule, must be one of: `&#34;Critical&#34;`, `&#34;Major&#34;`, `&#34;Minor&#34;`, `&#34;Warning&#34;`, `&#34;Info&#34;`.
     * 
     */
    public Output<String> severity() {
        return this.severity;
    }

    /**
     * Plain text suggested first course of action, such as a command line to execute. This can be used with custom notification messages.
     * 
     */
    @Import(name="tip")
    private @Nullable Output<String> tip;

    /**
     * @return Plain text suggested first course of action, such as a command line to execute. This can be used with custom notification messages.
     * 
     */
    public Optional<Output<String>> tip() {
        return Optional.ofNullable(this.tip);
    }

    private SloTargetAlertRuleRuleArgs() {}

    private SloTargetAlertRuleRuleArgs(SloTargetAlertRuleRuleArgs $) {
        this.description = $.description;
        this.disabled = $.disabled;
        this.notifications = $.notifications;
        this.parameterizedBody = $.parameterizedBody;
        this.parameterizedSubject = $.parameterizedSubject;
        this.parameters = $.parameters;
        this.runbookUrl = $.runbookUrl;
        this.severity = $.severity;
        this.tip = $.tip;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SloTargetAlertRuleRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SloTargetAlertRuleRuleArgs $;

        public Builder() {
            $ = new SloTargetAlertRuleRuleArgs();
        }

        public Builder(SloTargetAlertRuleRuleArgs defaults) {
            $ = new SloTargetAlertRuleRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description for the rule. Displays as the alert condition in the Alert Rules tab of the detector editor in the web UI.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param disabled When true, notifications and events will not be generated for the detect label. `false` by default.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled When true, notifications and events will not be generated for the detect label. `false` by default.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param notifications List of strings specifying where notifications will be sent when an incident occurs. See [Create SLO](https://dev.splunk.com/observability/reference/api/slo/latest#endpoint-create-new-slo) for more info.
         * 
         * @return builder
         * 
         */
        public Builder notifications(@Nullable Output<List<String>> notifications) {
            $.notifications = notifications;
            return this;
        }

        /**
         * @param notifications List of strings specifying where notifications will be sent when an incident occurs. See [Create SLO](https://dev.splunk.com/observability/reference/api/slo/latest#endpoint-create-new-slo) for more info.
         * 
         * @return builder
         * 
         */
        public Builder notifications(List<String> notifications) {
            return notifications(Output.of(notifications));
        }

        /**
         * @param notifications List of strings specifying where notifications will be sent when an incident occurs. See [Create SLO](https://dev.splunk.com/observability/reference/api/slo/latest#endpoint-create-new-slo) for more info.
         * 
         * @return builder
         * 
         */
        public Builder notifications(String... notifications) {
            return notifications(List.of(notifications));
        }

        /**
         * @param parameterizedBody Custom notification message body when an alert is triggered. See [Alert message](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#alert-messages) for more info.
         * 
         * @return builder
         * 
         */
        public Builder parameterizedBody(@Nullable Output<String> parameterizedBody) {
            $.parameterizedBody = parameterizedBody;
            return this;
        }

        /**
         * @param parameterizedBody Custom notification message body when an alert is triggered. See [Alert message](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#alert-messages) for more info.
         * 
         * @return builder
         * 
         */
        public Builder parameterizedBody(String parameterizedBody) {
            return parameterizedBody(Output.of(parameterizedBody));
        }

        /**
         * @param parameterizedSubject Custom notification message subject when an alert is triggered. See [Alert message](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#alert-messages) for more info.
         * 
         * @return builder
         * 
         */
        public Builder parameterizedSubject(@Nullable Output<String> parameterizedSubject) {
            $.parameterizedSubject = parameterizedSubject;
            return this;
        }

        /**
         * @param parameterizedSubject Custom notification message subject when an alert is triggered. See [Alert message](https://docs.splunk.com/observability/en/alerts-detectors-notifications/create-detectors-for-alerts.html#alert-messages) for more info.
         * 
         * @return builder
         * 
         */
        public Builder parameterizedSubject(String parameterizedSubject) {
            return parameterizedSubject(Output.of(parameterizedSubject));
        }

        /**
         * @param parameters Parameters for the SLO alert rule. Each SLO alert rule type accepts different parameters. If not specified, default parameters are used.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<SloTargetAlertRuleRuleParametersArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters for the SLO alert rule. Each SLO alert rule type accepts different parameters. If not specified, default parameters are used.
         * 
         * @return builder
         * 
         */
        public Builder parameters(SloTargetAlertRuleRuleParametersArgs parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param runbookUrl URL of page to consult when an alert is triggered. This can be used with custom notification messages.
         * 
         * @return builder
         * 
         */
        public Builder runbookUrl(@Nullable Output<String> runbookUrl) {
            $.runbookUrl = runbookUrl;
            return this;
        }

        /**
         * @param runbookUrl URL of page to consult when an alert is triggered. This can be used with custom notification messages.
         * 
         * @return builder
         * 
         */
        public Builder runbookUrl(String runbookUrl) {
            return runbookUrl(Output.of(runbookUrl));
        }

        /**
         * @param severity The severity of the rule, must be one of: `&#34;Critical&#34;`, `&#34;Major&#34;`, `&#34;Minor&#34;`, `&#34;Warning&#34;`, `&#34;Info&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder severity(Output<String> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity The severity of the rule, must be one of: `&#34;Critical&#34;`, `&#34;Major&#34;`, `&#34;Minor&#34;`, `&#34;Warning&#34;`, `&#34;Info&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param tip Plain text suggested first course of action, such as a command line to execute. This can be used with custom notification messages.
         * 
         * @return builder
         * 
         */
        public Builder tip(@Nullable Output<String> tip) {
            $.tip = tip;
            return this;
        }

        /**
         * @param tip Plain text suggested first course of action, such as a command line to execute. This can be used with custom notification messages.
         * 
         * @return builder
         * 
         */
        public Builder tip(String tip) {
            return tip(Output.of(tip));
        }

        public SloTargetAlertRuleRuleArgs build() {
            if ($.severity == null) {
                throw new MissingRequiredPropertyException("SloTargetAlertRuleRuleArgs", "severity");
            }
            return $;
        }
    }

}
