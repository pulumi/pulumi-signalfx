// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.automatedarchival.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExemptMetricExemptMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExemptMetricExemptMetricArgs Empty = new ExemptMetricExemptMetricArgs();

    /**
     * Timestamp of when the automated archival setting was created
     * 
     */
    @Import(name="created")
    private @Nullable Output<Integer> created;

    /**
     * @return Timestamp of when the automated archival setting was created
     * 
     */
    public Optional<Output<Integer>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * ID of the creator of the automated archival setting
     * 
     */
    @Import(name="creator")
    private @Nullable Output<String> creator;

    /**
     * @return ID of the creator of the automated archival setting
     * 
     */
    public Optional<Output<String>> creator() {
        return Optional.ofNullable(this.creator);
    }

    /**
     * Timestamp of when the automated archival setting was last updated
     * 
     */
    @Import(name="lastUpdated")
    private @Nullable Output<Integer> lastUpdated;

    /**
     * @return Timestamp of when the automated archival setting was last updated
     * 
     */
    public Optional<Output<Integer>> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }

    /**
     * ID of user who last updated the automated archival setting
     * 
     */
    @Import(name="lastUpdatedBy")
    private @Nullable Output<String> lastUpdatedBy;

    /**
     * @return ID of user who last updated the automated archival setting
     * 
     */
    public Optional<Output<String>> lastUpdatedBy() {
        return Optional.ofNullable(this.lastUpdatedBy);
    }

    /**
     * Name of the metric to be exempted from automated archival
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the metric to be exempted from automated archival
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ExemptMetricExemptMetricArgs() {}

    private ExemptMetricExemptMetricArgs(ExemptMetricExemptMetricArgs $) {
        this.created = $.created;
        this.creator = $.creator;
        this.lastUpdated = $.lastUpdated;
        this.lastUpdatedBy = $.lastUpdatedBy;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExemptMetricExemptMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExemptMetricExemptMetricArgs $;

        public Builder() {
            $ = new ExemptMetricExemptMetricArgs();
        }

        public Builder(ExemptMetricExemptMetricArgs defaults) {
            $ = new ExemptMetricExemptMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param created Timestamp of when the automated archival setting was created
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<Integer> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created Timestamp of when the automated archival setting was created
         * 
         * @return builder
         * 
         */
        public Builder created(Integer created) {
            return created(Output.of(created));
        }

        /**
         * @param creator ID of the creator of the automated archival setting
         * 
         * @return builder
         * 
         */
        public Builder creator(@Nullable Output<String> creator) {
            $.creator = creator;
            return this;
        }

        /**
         * @param creator ID of the creator of the automated archival setting
         * 
         * @return builder
         * 
         */
        public Builder creator(String creator) {
            return creator(Output.of(creator));
        }

        /**
         * @param lastUpdated Timestamp of when the automated archival setting was last updated
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(@Nullable Output<Integer> lastUpdated) {
            $.lastUpdated = lastUpdated;
            return this;
        }

        /**
         * @param lastUpdated Timestamp of when the automated archival setting was last updated
         * 
         * @return builder
         * 
         */
        public Builder lastUpdated(Integer lastUpdated) {
            return lastUpdated(Output.of(lastUpdated));
        }

        /**
         * @param lastUpdatedBy ID of user who last updated the automated archival setting
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedBy(@Nullable Output<String> lastUpdatedBy) {
            $.lastUpdatedBy = lastUpdatedBy;
            return this;
        }

        /**
         * @param lastUpdatedBy ID of user who last updated the automated archival setting
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            return lastUpdatedBy(Output.of(lastUpdatedBy));
        }

        /**
         * @param name Name of the metric to be exempted from automated archival
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the metric to be exempted from automated archival
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ExemptMetricExemptMetricArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ExemptMetricExemptMetricArgs", "name");
            }
            return $;
        }
    }

}
