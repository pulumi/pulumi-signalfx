// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.gcp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.signalfx.Utilities;
import com.pulumi.signalfx.gcp.IntegrationArgs;
import com.pulumi.signalfx.gcp.inputs.IntegrationState;
import com.pulumi.signalfx.gcp.outputs.IntegrationProjectServiceKey;
import com.pulumi.signalfx.gcp.outputs.IntegrationProjectWifConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Splunk Observability Cloud GCP Integration.
 * 
 * &gt; **NOTE** When managing integrations, use a session token of an administrator to authenticate the Splunk  Observability Cloud provider. See [Operations that require a session token for an administrator](https://dev.splunk.com/observability/docs/administration/authtokens#Operations-that-require-a-session-token-for-an-administrator). Otherwise you&#39;ll receive a 4xx error.
 * 
 */
@ResourceType(type="signalfx:gcp/integration:Integration")
public class Integration extends com.pulumi.resources.CustomResource {
    /**
     * Authentication method to use in this integration. If empty, Splunk Observability backend defaults to SERVICE_ACCOUNT_KEY
     * 
     */
    @Export(name="authMethod", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authMethod;

    /**
     * @return Authentication method to use in this integration. If empty, Splunk Observability backend defaults to SERVICE_ACCOUNT_KEY
     * 
     */
    public Output<Optional<String>> authMethod() {
        return Codegen.optional(this.authMethod);
    }
    /**
     * List of additional GCP service domain names that Splunk Observability Cloud will monitor. See [Custom Metric Type Domains documentation](https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview/#Custom-metric-type-domains)
     * 
     */
    @Export(name="customMetricTypeDomains", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> customMetricTypeDomains;

    /**
     * @return List of additional GCP service domain names that Splunk Observability Cloud will monitor. See [Custom Metric Type Domains documentation](https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview/#Custom-metric-type-domains)
     * 
     */
    public Output<Optional<List<String>>> customMetricTypeDomains() {
        return Codegen.optional(this.customMetricTypeDomains);
    }
    /**
     * Whether the integration is enabled.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Whether the integration is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * If enabled, Splunk Observability Cloud will sync also Google Cloud Monitoring data. If disabled, Splunk Observability Cloud will import only metadata. Defaults to true.
     * 
     */
    @Export(name="importGcpMetrics", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> importGcpMetrics;

    /**
     * @return If enabled, Splunk Observability Cloud will sync also Google Cloud Monitoring data. If disabled, Splunk Observability Cloud will import only metadata. Defaults to true.
     * 
     */
    public Output<Optional<Boolean>> importGcpMetrics() {
        return Codegen.optional(this.importGcpMetrics);
    }
    /**
     * [Compute Metadata Include List](https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview/).
     * 
     */
    @Export(name="includeLists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> includeLists;

    /**
     * @return [Compute Metadata Include List](https://dev.splunk.com/observability/docs/integrations/gcp_integration_overview/).
     * 
     */
    public Output<Optional<List<String>>> includeLists() {
        return Codegen.optional(this.includeLists);
    }
    /**
     * Name of the integration.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the integration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name of the org token to be used for data ingestion. If not specified then default access token is used.
     * 
     */
    @Export(name="namedToken", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namedToken;

    /**
     * @return Name of the org token to be used for data ingestion. If not specified then default access token is used.
     * 
     */
    public Output<Optional<String>> namedToken() {
        return Codegen.optional(this.namedToken);
    }
    /**
     * GCP integration poll rate (in seconds). Value between `60` and `600`. Default: `300`.
     * 
     */
    @Export(name="pollRate", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> pollRate;

    /**
     * @return GCP integration poll rate (in seconds). Value between `60` and `600`. Default: `300`.
     * 
     */
    public Output<Optional<Integer>> pollRate() {
        return Codegen.optional(this.pollRate);
    }
    /**
     * GCP projects to add.
     * 
     */
    @Export(name="projectServiceKeys", refs={List.class,IntegrationProjectServiceKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<IntegrationProjectServiceKey>> projectServiceKeys;

    /**
     * @return GCP projects to add.
     * 
     */
    public Output<Optional<List<IntegrationProjectServiceKey>>> projectServiceKeys() {
        return Codegen.optional(this.projectServiceKeys);
    }
    /**
     * GCP WIF configs
     * 
     */
    @Export(name="projectWifConfigs", refs={List.class,IntegrationProjectWifConfig.class}, tree="[0,1]")
    private Output</* @Nullable */ List<IntegrationProjectWifConfig>> projectWifConfigs;

    /**
     * @return GCP WIF configs
     * 
     */
    public Output<Optional<List<IntegrationProjectWifConfig>>> projectWifConfigs() {
        return Codegen.optional(this.projectWifConfigs);
    }
    /**
     * GCP service metrics to import. Can be an empty list, or not included, to import &#39;All services&#39;. See [Google Cloud Platform services](https://docs.splunk.com/Observability/gdi/get-data-in/integrations.html#google-cloud-platform-services) for a list of valid values.
     * 
     */
    @Export(name="services", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> services;

    /**
     * @return GCP service metrics to import. Can be an empty list, or not included, to import &#39;All services&#39;. See [Google Cloud Platform services](https://docs.splunk.com/Observability/gdi/get-data-in/integrations.html#google-cloud-platform-services) for a list of valid values.
     * 
     */
    public Output<Optional<List<String>>> services() {
        return Codegen.optional(this.services);
    }
    /**
     * When this value is set to true Observability Cloud will force usage of a quota from the project where metrics are stored. For this to work the service account provided for the project needs to be provided with serviceusage.services.use permission or Service Usage Consumer role in this project. When set to false default quota settings are used.
     * 
     */
    @Export(name="useMetricSourceProjectForQuota", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useMetricSourceProjectForQuota;

    /**
     * @return When this value is set to true Observability Cloud will force usage of a quota from the project where metrics are stored. For this to work the service account provided for the project needs to be provided with serviceusage.services.use permission or Service Usage Consumer role in this project. When set to false default quota settings are used.
     * 
     */
    public Output<Optional<Boolean>> useMetricSourceProjectForQuota() {
        return Codegen.optional(this.useMetricSourceProjectForQuota);
    }
    /**
     * The Splunk Observability GCP identity to include in GCP WIF provider definition.
     * 
     */
    @Export(name="wifSplunkIdentity", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> wifSplunkIdentity;

    /**
     * @return The Splunk Observability GCP identity to include in GCP WIF provider definition.
     * 
     */
    public Output<Map<String,String>> wifSplunkIdentity() {
        return this.wifSplunkIdentity;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Integration(java.lang.String name) {
        this(name, IntegrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Integration(java.lang.String name, IntegrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Integration(java.lang.String name, IntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:gcp/integration:Integration", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Integration(java.lang.String name, Output<java.lang.String> id, @Nullable IntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:gcp/integration:Integration", name, state, makeResourceOptions(options, id), false);
    }

    private static IntegrationArgs makeArgs(IntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IntegrationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "projectServiceKeys",
                "projectWifConfigs"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Integration get(java.lang.String name, Output<java.lang.String> id, @Nullable IntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Integration(name, id, state, options);
    }
}
