// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SloChartState extends com.pulumi.resources.ResourceArgs {

    public static final SloChartState Empty = new SloChartState();

    /**
     * ID of SLO object.
     * 
     */
    @Import(name="sloId")
    private @Nullable Output<String> sloId;

    /**
     * @return ID of SLO object.
     * 
     */
    public Optional<Output<String>> sloId() {
        return Optional.ofNullable(this.sloId);
    }

    /**
     * The URL of the chart.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The URL of the chart.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private SloChartState() {}

    private SloChartState(SloChartState $) {
        this.sloId = $.sloId;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SloChartState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SloChartState $;

        public Builder() {
            $ = new SloChartState();
        }

        public Builder(SloChartState defaults) {
            $ = new SloChartState(Objects.requireNonNull(defaults));
        }

        /**
         * @param sloId ID of SLO object.
         * 
         * @return builder
         * 
         */
        public Builder sloId(@Nullable Output<String> sloId) {
            $.sloId = sloId;
            return this;
        }

        /**
         * @param sloId ID of SLO object.
         * 
         * @return builder
         * 
         */
        public Builder sloId(String sloId) {
            return sloId(Output.of(sloId));
        }

        /**
         * @param url The URL of the chart.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The URL of the chart.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public SloChartState build() {
            return $;
        }
    }

}
