// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertMutingRuleFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertMutingRuleFilterArgs Empty = new AlertMutingRuleFilterArgs();

    /**
     * (false by default) whether this filter should be a &#34;not&#34; filter
     * 
     */
    @Import(name="negated")
    private @Nullable Output<Boolean> negated;

    /**
     * @return (false by default) whether this filter should be a &#34;not&#34; filter
     * 
     */
    public Optional<Output<Boolean>> negated() {
        return Optional.ofNullable(this.negated);
    }

    /**
     * the property to filter by
     * 
     */
    @Import(name="property", required=true)
    private Output<String> property;

    /**
     * @return the property to filter by
     * 
     */
    public Output<String> property() {
        return this.property;
    }

    /**
     * the value of the property to filter by
     * 
     */
    @Import(name="propertyValue", required=true)
    private Output<String> propertyValue;

    /**
     * @return the value of the property to filter by
     * 
     */
    public Output<String> propertyValue() {
        return this.propertyValue;
    }

    private AlertMutingRuleFilterArgs() {}

    private AlertMutingRuleFilterArgs(AlertMutingRuleFilterArgs $) {
        this.negated = $.negated;
        this.property = $.property;
        this.propertyValue = $.propertyValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertMutingRuleFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertMutingRuleFilterArgs $;

        public Builder() {
            $ = new AlertMutingRuleFilterArgs();
        }

        public Builder(AlertMutingRuleFilterArgs defaults) {
            $ = new AlertMutingRuleFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param negated (false by default) whether this filter should be a &#34;not&#34; filter
         * 
         * @return builder
         * 
         */
        public Builder negated(@Nullable Output<Boolean> negated) {
            $.negated = negated;
            return this;
        }

        /**
         * @param negated (false by default) whether this filter should be a &#34;not&#34; filter
         * 
         * @return builder
         * 
         */
        public Builder negated(Boolean negated) {
            return negated(Output.of(negated));
        }

        /**
         * @param property the property to filter by
         * 
         * @return builder
         * 
         */
        public Builder property(Output<String> property) {
            $.property = property;
            return this;
        }

        /**
         * @param property the property to filter by
         * 
         * @return builder
         * 
         */
        public Builder property(String property) {
            return property(Output.of(property));
        }

        /**
         * @param propertyValue the value of the property to filter by
         * 
         * @return builder
         * 
         */
        public Builder propertyValue(Output<String> propertyValue) {
            $.propertyValue = propertyValue;
            return this;
        }

        /**
         * @param propertyValue the value of the property to filter by
         * 
         * @return builder
         * 
         */
        public Builder propertyValue(String propertyValue) {
            return propertyValue(Output.of(propertyValue));
        }

        public AlertMutingRuleFilterArgs build() {
            if ($.property == null) {
                throw new MissingRequiredPropertyException("AlertMutingRuleFilterArgs", "property");
            }
            if ($.propertyValue == null) {
                throw new MissingRequiredPropertyException("AlertMutingRuleFilterArgs", "propertyValue");
            }
            return $;
        }
    }

}
