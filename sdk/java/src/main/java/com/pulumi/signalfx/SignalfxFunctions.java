// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.signalfx.Utilities;
import com.pulumi.signalfx.inputs.GetAwsServicesArgs;
import com.pulumi.signalfx.inputs.GetAwsServicesPlainArgs;
import com.pulumi.signalfx.inputs.GetAzureServicesArgs;
import com.pulumi.signalfx.inputs.GetAzureServicesPlainArgs;
import com.pulumi.signalfx.inputs.GetDimensionValuesArgs;
import com.pulumi.signalfx.inputs.GetDimensionValuesPlainArgs;
import com.pulumi.signalfx.outputs.GetAwsServicesResult;
import com.pulumi.signalfx.outputs.GetAzureServicesResult;
import com.pulumi.signalfx.outputs.GetDimensionValuesResult;
import java.util.concurrent.CompletableFuture;

public final class SignalfxFunctions {
    /**
     * 
     * @deprecated
     * signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices
     * 
     */
    @Deprecated /* signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices */
    public static Output<GetAwsServicesResult> getAwsServices() {
        return getAwsServices(GetAwsServicesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * 
     * @deprecated
     * signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices
     * 
     */
    @Deprecated /* signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices */
    public static CompletableFuture<GetAwsServicesResult> getAwsServicesPlain() {
        return getAwsServicesPlain(GetAwsServicesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * 
     * @deprecated
     * signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices
     * 
     */
    @Deprecated /* signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices */
    public static Output<GetAwsServicesResult> getAwsServices(GetAwsServicesArgs args) {
        return getAwsServices(args, InvokeOptions.Empty);
    }
    /**
     * 
     * @deprecated
     * signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices
     * 
     */
    @Deprecated /* signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices */
    public static CompletableFuture<GetAwsServicesResult> getAwsServicesPlain(GetAwsServicesPlainArgs args) {
        return getAwsServicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * 
     * @deprecated
     * signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices
     * 
     */
    @Deprecated /* signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices */
    public static Output<GetAwsServicesResult> getAwsServices(GetAwsServicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("signalfx:index/getAwsServices:getAwsServices", TypeShape.of(GetAwsServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * 
     * @deprecated
     * signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices
     * 
     */
    @Deprecated /* signalfx.getAwsServices has been deprecated in favor of signalfx.aws.getServices */
    public static CompletableFuture<GetAwsServicesResult> getAwsServicesPlain(GetAwsServicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("signalfx:index/getAwsServices:getAwsServices", TypeShape.of(GetAwsServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * 
     * @deprecated
     * signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices
     * 
     */
    @Deprecated /* signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices */
    public static Output<GetAzureServicesResult> getAzureServices() {
        return getAzureServices(GetAzureServicesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * 
     * @deprecated
     * signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices
     * 
     */
    @Deprecated /* signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices */
    public static CompletableFuture<GetAzureServicesResult> getAzureServicesPlain() {
        return getAzureServicesPlain(GetAzureServicesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * 
     * @deprecated
     * signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices
     * 
     */
    @Deprecated /* signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices */
    public static Output<GetAzureServicesResult> getAzureServices(GetAzureServicesArgs args) {
        return getAzureServices(args, InvokeOptions.Empty);
    }
    /**
     * 
     * @deprecated
     * signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices
     * 
     */
    @Deprecated /* signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices */
    public static CompletableFuture<GetAzureServicesResult> getAzureServicesPlain(GetAzureServicesPlainArgs args) {
        return getAzureServicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * 
     * @deprecated
     * signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices
     * 
     */
    @Deprecated /* signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices */
    public static Output<GetAzureServicesResult> getAzureServices(GetAzureServicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("signalfx:index/getAzureServices:getAzureServices", TypeShape.of(GetAzureServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * 
     * @deprecated
     * signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices
     * 
     */
    @Deprecated /* signalfx.getAzureServices has been deprecated in favor of signalfx.azure.getServices */
    public static CompletableFuture<GetAzureServicesResult> getAzureServicesPlain(GetAzureServicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("signalfx:index/getAzureServices:getAzureServices", TypeShape.of(GetAzureServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of dimension values matching the provided query.
     * 
     * &gt; **NOTE** This data source only allows 1000 values, as it&#39;s kinda nuts to make anything with `for_each` that big in SignalFx. This is negotiable.
     * 
     */
    public static Output<GetDimensionValuesResult> getDimensionValues(GetDimensionValuesArgs args) {
        return getDimensionValues(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of dimension values matching the provided query.
     * 
     * &gt; **NOTE** This data source only allows 1000 values, as it&#39;s kinda nuts to make anything with `for_each` that big in SignalFx. This is negotiable.
     * 
     */
    public static CompletableFuture<GetDimensionValuesResult> getDimensionValuesPlain(GetDimensionValuesPlainArgs args) {
        return getDimensionValuesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a list of dimension values matching the provided query.
     * 
     * &gt; **NOTE** This data source only allows 1000 values, as it&#39;s kinda nuts to make anything with `for_each` that big in SignalFx. This is negotiable.
     * 
     */
    public static Output<GetDimensionValuesResult> getDimensionValues(GetDimensionValuesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("signalfx:index/getDimensionValues:getDimensionValues", TypeShape.of(GetDimensionValuesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a list of dimension values matching the provided query.
     * 
     * &gt; **NOTE** This data source only allows 1000 values, as it&#39;s kinda nuts to make anything with `for_each` that big in SignalFx. This is negotiable.
     * 
     */
    public static CompletableFuture<GetDimensionValuesResult> getDimensionValuesPlain(GetDimensionValuesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("signalfx:index/getDimensionValues:getDimensionValues", TypeShape.of(GetDimensionValuesResult.class), args, Utilities.withVersion(options));
    }
}
