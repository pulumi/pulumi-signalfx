// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.automatedarchival.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.signalfx.automatedarchival.inputs.ExemptMetricExemptMetricArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExemptMetricState extends com.pulumi.resources.ResourceArgs {

    public static final ExemptMetricState Empty = new ExemptMetricState();

    /**
     * List of metrics to be exempted from automated archival
     * 
     */
    @Import(name="exemptMetrics")
    private @Nullable Output<List<ExemptMetricExemptMetricArgs>> exemptMetrics;

    /**
     * @return List of metrics to be exempted from automated archival
     * 
     */
    public Optional<Output<List<ExemptMetricExemptMetricArgs>>> exemptMetrics() {
        return Optional.ofNullable(this.exemptMetrics);
    }

    private ExemptMetricState() {}

    private ExemptMetricState(ExemptMetricState $) {
        this.exemptMetrics = $.exemptMetrics;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExemptMetricState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExemptMetricState $;

        public Builder() {
            $ = new ExemptMetricState();
        }

        public Builder(ExemptMetricState defaults) {
            $ = new ExemptMetricState(Objects.requireNonNull(defaults));
        }

        /**
         * @param exemptMetrics List of metrics to be exempted from automated archival
         * 
         * @return builder
         * 
         */
        public Builder exemptMetrics(@Nullable Output<List<ExemptMetricExemptMetricArgs>> exemptMetrics) {
            $.exemptMetrics = exemptMetrics;
            return this;
        }

        /**
         * @param exemptMetrics List of metrics to be exempted from automated archival
         * 
         * @return builder
         * 
         */
        public Builder exemptMetrics(List<ExemptMetricExemptMetricArgs> exemptMetrics) {
            return exemptMetrics(Output.of(exemptMetrics));
        }

        /**
         * @param exemptMetrics List of metrics to be exempted from automated archival
         * 
         * @return builder
         * 
         */
        public Builder exemptMetrics(ExemptMetricExemptMetricArgs... exemptMetrics) {
            return exemptMetrics(List.of(exemptMetrics));
        }

        public ExemptMetricState build() {
            return $;
        }
    }

}
