// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.signalfx.outputs.MetricRulesetExceptionRuleMatcher;
import com.pulumi.signalfx.outputs.MetricRulesetExceptionRuleRestoration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricRulesetExceptionRule {
    /**
     * @return Information about an exception rule
     * 
     */
    private @Nullable String description;
    /**
     * @return When false, this rule will not route matched data to real-time
     * 
     */
    private Boolean enabled;
    /**
     * @return Matcher object
     * 
     */
    private List<MetricRulesetExceptionRuleMatcher> matchers;
    /**
     * @return name of the exception rule
     * 
     */
    private @Nullable String name;
    /**
     * @return Properties of a restoration job
     * 
     */
    private @Nullable List<MetricRulesetExceptionRuleRestoration> restorations;

    private MetricRulesetExceptionRule() {}
    /**
     * @return Information about an exception rule
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return When false, this rule will not route matched data to real-time
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Matcher object
     * 
     */
    public List<MetricRulesetExceptionRuleMatcher> matchers() {
        return this.matchers;
    }
    /**
     * @return name of the exception rule
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Properties of a restoration job
     * 
     */
    public List<MetricRulesetExceptionRuleRestoration> restorations() {
        return this.restorations == null ? List.of() : this.restorations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricRulesetExceptionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private Boolean enabled;
        private List<MetricRulesetExceptionRuleMatcher> matchers;
        private @Nullable String name;
        private @Nullable List<MetricRulesetExceptionRuleRestoration> restorations;
        public Builder() {}
        public Builder(MetricRulesetExceptionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.matchers = defaults.matchers;
    	      this.name = defaults.name;
    	      this.restorations = defaults.restorations;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("MetricRulesetExceptionRule", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder matchers(List<MetricRulesetExceptionRuleMatcher> matchers) {
            if (matchers == null) {
              throw new MissingRequiredPropertyException("MetricRulesetExceptionRule", "matchers");
            }
            this.matchers = matchers;
            return this;
        }
        public Builder matchers(MetricRulesetExceptionRuleMatcher... matchers) {
            return matchers(List.of(matchers));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder restorations(@Nullable List<MetricRulesetExceptionRuleRestoration> restorations) {

            this.restorations = restorations;
            return this;
        }
        public Builder restorations(MetricRulesetExceptionRuleRestoration... restorations) {
            return restorations(List.of(restorations));
        }
        public MetricRulesetExceptionRule build() {
            final var _resultValue = new MetricRulesetExceptionRule();
            _resultValue.description = description;
            _resultValue.enabled = enabled;
            _resultValue.matchers = matchers;
            _resultValue.name = name;
            _resultValue.restorations = restorations;
            return _resultValue;
        }
    }
}
