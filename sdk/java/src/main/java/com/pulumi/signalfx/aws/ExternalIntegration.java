// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.aws;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.signalfx.Utilities;
import com.pulumi.signalfx.aws.ExternalIntegrationArgs;
import com.pulumi.signalfx.aws.inputs.ExternalIntegrationState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Splunk Observability AWS CloudWatch integrations using Role ARNs. For help with this integration see [Connect to AWS CloudWatch](https://docs.splunk.com/observability/en/gdi/get-data-in/connect/aws/aws-apiconfig.html).
 * 
 * &gt; **NOTE** When managing integrations, use a session token of an administrator to authenticate the Splunk Observability provider. See [Operations that require a session token for an administrator](https://dev.splunk.com/observability/docs/administration/authtokens#Operations-that-require-a-session-token-for-an-administrator).
 * 
 * &gt; **WARNING** This resource implements part of a workflow. Use it with `signalfx.aws.Integration`. Check with Splunk support for your realm&#39;s AWS account id.
 * 
 * ## Example
 * 
 * ## Arguments
 * 
 * * `name` - (Required) The name of this integration
 * 
 * ## Attributes
 * 
 * In addition to all arguments above, the following attributes are exported:
 * 
 * * `id` - The ID of this integration, used with `signalfx.aws.Integration`
 * * `external_id` - The external ID to use with your IAM role and with `signalfx.aws.Integration`.
 * * `signalfx_aws_account` - The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
 * 
 */
@ResourceType(type="signalfx:aws/externalIntegration:ExternalIntegration")
public class ExternalIntegration extends com.pulumi.resources.CustomResource {
    /**
     * The AWS external ID generated by Splunk Observability to use with an AWS integration.
     * 
     */
    @Export(name="externalId", refs={String.class}, tree="[0]")
    private Output<String> externalId;

    /**
     * @return The AWS external ID generated by Splunk Observability to use with an AWS integration.
     * 
     */
    public Output<String> externalId() {
        return this.externalId;
    }
    /**
     * Name of the integration
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the integration
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Splunk Observability AWS account ID to use with an AWS role.
     * 
     */
    @Export(name="signalfxAwsAccount", refs={String.class}, tree="[0]")
    private Output<String> signalfxAwsAccount;

    /**
     * @return The Splunk Observability AWS account ID to use with an AWS role.
     * 
     */
    public Output<String> signalfxAwsAccount() {
        return this.signalfxAwsAccount;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalIntegration(String name) {
        this(name, ExternalIntegrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalIntegration(String name, @Nullable ExternalIntegrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalIntegration(String name, @Nullable ExternalIntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:aws/externalIntegration:ExternalIntegration", name, args == null ? ExternalIntegrationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExternalIntegration(String name, Output<String> id, @Nullable ExternalIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:aws/externalIntegration:ExternalIntegration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "externalId",
                "signalfxAwsAccount"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalIntegration get(String name, Output<String> id, @Nullable ExternalIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalIntegration(name, id, state, options);
    }
}
