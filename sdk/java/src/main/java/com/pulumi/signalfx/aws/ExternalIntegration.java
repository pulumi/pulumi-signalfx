// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.aws;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.signalfx.Utilities;
import com.pulumi.signalfx.aws.ExternalIntegrationArgs;
import com.pulumi.signalfx.aws.inputs.ExternalIntegrationState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Splunk Observability AWS CloudWatch integrations using Role ARNs. For help with this integration see [Connect to AWS CloudWatch](https://docs.splunk.com/observability/en/gdi/get-data-in/connect/aws/aws-apiconfig.html).
 * 
 * &gt; **NOTE** When managing integrations, use a session token of an administrator to authenticate the Splunk Observability provider. See [Operations that require a session token for an administrator](https://dev.splunk.com/observability/docs/administration/authtokens#Operations-that-require-a-session-token-for-an-administrator).
 * 
 * &gt; **WARNING** This resource implements part of a workflow. Use it with `signalfx.aws.Integration`. Check with Splunk support for your realm&#39;s AWS account id.
 * 
 * ## Example
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.signalfx.aws.ExternalIntegration;
 * import com.pulumi.aws.iam.IamFunctions;
 * import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
 * import com.pulumi.aws.iam.Role;
 * import com.pulumi.aws.iam.RoleArgs;
 * import com.pulumi.aws.iam.Policy;
 * import com.pulumi.aws.iam.PolicyArgs;
 * import com.pulumi.aws.iam.RolePolicyAttachment;
 * import com.pulumi.aws.iam.RolePolicyAttachmentArgs;
 * import com.pulumi.signalfx.aws.Integration;
 * import com.pulumi.signalfx.aws.IntegrationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var awsMyteamExtern = new ExternalIntegration(&#34;awsMyteamExtern&#34;);
 * 
 *         final var signalfxAssumePolicy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
 *             .statements(GetPolicyDocumentStatementArgs.builder()
 *                 .actions(&#34;sts:AssumeRole&#34;)
 *                 .principals(GetPolicyDocumentStatementPrincipalArgs.builder()
 *                     .type(&#34;AWS&#34;)
 *                     .identifiers(awsMyteamExtern.signalfxAwsAccount())
 *                     .build())
 *                 .conditions(GetPolicyDocumentStatementConditionArgs.builder()
 *                     .test(&#34;StringEquals&#34;)
 *                     .variable(&#34;sts:ExternalId&#34;)
 *                     .values(awsMyteamExtern.externalId())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var awsSplunkRole = new Role(&#34;awsSplunkRole&#34;, RoleArgs.builder()        
 *             .description(&#34;Splunk Observability Cloud integration to read out data and send it to signalfxs aws account&#34;)
 *             .assumeRolePolicy(signalfxAssumePolicy.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult).applyValue(signalfxAssumePolicy -&gt; signalfxAssumePolicy.applyValue(getPolicyDocumentResult -&gt; getPolicyDocumentResult.json())))
 *             .build());
 * 
 *         var awsSplunkPolicy = new Policy(&#34;awsSplunkPolicy&#34;, PolicyArgs.builder()        
 *             .description(&#34;AWS permissions required by the Splunk Observability Cloud&#34;)
 *             .policy(&#34;&#34;&#34;
 * {
 *   &#34;Version&#34;: &#34;2012-10-17&#34;,
 *   &#34;Statement&#34;: [
 *     {
 *       &#34;Effect&#34;: &#34;Allow&#34;,
 *       &#34;Action&#34;: [
 *         &#34;apigateway:GET&#34;,
 *         &#34;autoscaling:DescribeAutoScalingGroups&#34;,
 *         &#34;cloudfront:GetDistributionConfig&#34;,
 *         &#34;cloudfront:ListDistributions&#34;,
 *         &#34;cloudfront:ListTagsForResource&#34;,
 *         &#34;cloudwatch:DescribeAlarms&#34;,
 *         &#34;cloudwatch:GetMetricData&#34;,
 *         &#34;cloudwatch:GetMetricStatistics&#34;,
 *         &#34;cloudwatch:ListMetrics&#34;,
 *         &#34;directconnect:DescribeConnections&#34;,
 *         &#34;dynamodb:DescribeTable&#34;,
 *         &#34;dynamodb:ListTables&#34;,
 *         &#34;dynamodb:ListTagsOfResource&#34;,
 *         &#34;ec2:DescribeInstances&#34;,
 *         &#34;ec2:DescribeInstanceStatus&#34;,
 *         &#34;ec2:DescribeRegions&#34;,
 *         &#34;ec2:DescribeReservedInstances&#34;,
 *         &#34;ec2:DescribeReservedInstancesModifications&#34;,
 *         &#34;ec2:DescribeTags&#34;,
 *         &#34;ec2:DescribeVolumes&#34;,
 *         &#34;ecs:DescribeClusters&#34;,
 *         &#34;ecs:DescribeServices&#34;,
 *         &#34;ecs:DescribeTasks&#34;,
 *         &#34;ecs:ListClusters&#34;,
 *         &#34;ecs:ListServices&#34;,
 *         &#34;ecs:ListTagsForResource&#34;,
 *         &#34;ecs:ListTaskDefinitions&#34;,
 *         &#34;ecs:ListTasks&#34;,
 *         &#34;elasticache:DescribeCacheClusters&#34;,
 *         &#34;elasticloadbalancing:DescribeLoadBalancerAttributes&#34;,
 *         &#34;elasticloadbalancing:DescribeLoadBalancers&#34;,
 *         &#34;elasticloadbalancing:DescribeTags&#34;,
 *         &#34;elasticloadbalancing:DescribeTargetGroups&#34;,
 *         &#34;elasticmapreduce:DescribeCluster&#34;,
 *         &#34;elasticmapreduce:ListClusters&#34;,
 *         &#34;es:DescribeElasticsearchDomain&#34;,
 *         &#34;es:ListDomainNames&#34;,
 *         &#34;kinesis:DescribeStream&#34;,
 *         &#34;kinesis:ListShards&#34;,
 *         &#34;kinesis:ListStreams&#34;,
 *         &#34;kinesis:ListTagsForStream&#34;,
 *         &#34;lambda:GetAlias&#34;,
 *         &#34;lambda:ListFunctions&#34;,
 *         &#34;lambda:ListTags&#34;,
 *         &#34;logs:DeleteSubscriptionFilter&#34;,
 *         &#34;logs:DescribeLogGroups&#34;,
 *         &#34;logs:DescribeSubscriptionFilters&#34;,
 *         &#34;logs:PutSubscriptionFilter&#34;,
 *         &#34;organizations:DescribeOrganization&#34;,
 *         &#34;rds:DescribeDBClusters&#34;,
 *         &#34;rds:DescribeDBInstances&#34;,
 *         &#34;rds:ListTagsForResource&#34;,
 *         &#34;redshift:DescribeClusters&#34;,
 *         &#34;redshift:DescribeLoggingStatus&#34;,
 *         &#34;s3:GetBucketLocation&#34;,
 *         &#34;s3:GetBucketLogging&#34;,
 *         &#34;s3:GetBucketNotification&#34;,
 *         &#34;s3:GetBucketTagging&#34;,
 *         &#34;s3:ListAllMyBuckets&#34;,
 *         &#34;s3:ListBucket&#34;,
 *         &#34;s3:PutBucketNotification&#34;,
 *         &#34;sqs:GetQueueAttributes&#34;,
 *         &#34;sqs:ListQueues&#34;,
 *         &#34;sqs:ListQueueTags&#34;,
 *         &#34;states:ListStateMachines&#34;,
 *         &#34;tag:GetResources&#34;,
 *         &#34;workspaces:DescribeWorkspaces&#34;
 *       ],
 *       &#34;Resource&#34;: &#34;*&#34;
 *     }
 *   ]
 * }
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *         var splunkRolePolicyAttach = new RolePolicyAttachment(&#34;splunkRolePolicyAttach&#34;, RolePolicyAttachmentArgs.builder()        
 *             .role(awsSplunkRole.name())
 *             .policyArn(awsSplunkPolicy.arn())
 *             .build());
 * 
 *         var awsMyteam = new Integration(&#34;awsMyteam&#34;, IntegrationArgs.builder()        
 *             .enabled(true)
 *             .integrationId(awsMyteamExtern.id())
 *             .externalId(awsMyteamExtern.externalId())
 *             .roleArn(awsSplunkRole.arn())
 *             .regions(&#34;us-east-1&#34;)
 *             .pollRate(300)
 *             .importCloudWatch(true)
 *             .enableAwsUsage(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Arguments
 * 
 * * `name` - (Required) The name of this integration
 * 
 * ## Attributes
 * 
 * In addition to all arguments above, the following attributes are exported:
 * 
 * * `id` - The ID of this integration, used with `signalfx.aws.Integration`
 * * `external_id` - The external ID to use with your IAM role and with `signalfx.aws.Integration`.
 * * `signalfx_aws_account` - The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
 * 
 */
@ResourceType(type="signalfx:aws/externalIntegration:ExternalIntegration")
public class ExternalIntegration extends com.pulumi.resources.CustomResource {
    /**
     * The AWS external ID generated by Splunk Observability to use with an AWS integration.
     * 
     */
    @Export(name="externalId", refs={String.class}, tree="[0]")
    private Output<String> externalId;

    /**
     * @return The AWS external ID generated by Splunk Observability to use with an AWS integration.
     * 
     */
    public Output<String> externalId() {
        return this.externalId;
    }
    /**
     * Name of the integration
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the integration
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Splunk Observability AWS account ID to use with an AWS role.
     * 
     */
    @Export(name="signalfxAwsAccount", refs={String.class}, tree="[0]")
    private Output<String> signalfxAwsAccount;

    /**
     * @return The Splunk Observability AWS account ID to use with an AWS role.
     * 
     */
    public Output<String> signalfxAwsAccount() {
        return this.signalfxAwsAccount;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalIntegration(String name) {
        this(name, ExternalIntegrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalIntegration(String name, @Nullable ExternalIntegrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalIntegration(String name, @Nullable ExternalIntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:aws/externalIntegration:ExternalIntegration", name, args == null ? ExternalIntegrationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExternalIntegration(String name, Output<String> id, @Nullable ExternalIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:aws/externalIntegration:ExternalIntegration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "externalId",
                "signalfxAwsAccount"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalIntegration get(String name, Output<String> id, @Nullable ExternalIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalIntegration(name, id, state, options);
    }
}
