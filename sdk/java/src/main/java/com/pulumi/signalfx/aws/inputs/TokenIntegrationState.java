// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TokenIntegrationState extends com.pulumi.resources.ResourceArgs {

    public static final TokenIntegrationState Empty = new TokenIntegrationState();

    /**
     * The name of this integration
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of this integration
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
     * 
     */
    @Import(name="signalfxAwsAccount")
    private @Nullable Output<String> signalfxAwsAccount;

    /**
     * @return The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
     * 
     */
    public Optional<Output<String>> signalfxAwsAccount() {
        return Optional.ofNullable(this.signalfxAwsAccount);
    }

    /**
     * The SignalFx-generated AWS token to use with an AWS integration.
     * 
     */
    @Import(name="tokenId")
    private @Nullable Output<String> tokenId;

    /**
     * @return The SignalFx-generated AWS token to use with an AWS integration.
     * 
     */
    public Optional<Output<String>> tokenId() {
        return Optional.ofNullable(this.tokenId);
    }

    private TokenIntegrationState() {}

    private TokenIntegrationState(TokenIntegrationState $) {
        this.name = $.name;
        this.signalfxAwsAccount = $.signalfxAwsAccount;
        this.tokenId = $.tokenId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TokenIntegrationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TokenIntegrationState $;

        public Builder() {
            $ = new TokenIntegrationState();
        }

        public Builder(TokenIntegrationState defaults) {
            $ = new TokenIntegrationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of this integration
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of this integration
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param signalfxAwsAccount The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
         * 
         * @return builder
         * 
         */
        public Builder signalfxAwsAccount(@Nullable Output<String> signalfxAwsAccount) {
            $.signalfxAwsAccount = signalfxAwsAccount;
            return this;
        }

        /**
         * @param signalfxAwsAccount The AWS Account ARN to use with your policies/roles, provided by Splunk Observability Cloud.
         * 
         * @return builder
         * 
         */
        public Builder signalfxAwsAccount(String signalfxAwsAccount) {
            return signalfxAwsAccount(Output.of(signalfxAwsAccount));
        }

        /**
         * @param tokenId The SignalFx-generated AWS token to use with an AWS integration.
         * 
         * @return builder
         * 
         */
        public Builder tokenId(@Nullable Output<String> tokenId) {
            $.tokenId = tokenId;
            return this;
        }

        /**
         * @param tokenId The SignalFx-generated AWS token to use with an AWS integration.
         * 
         * @return builder
         * 
         */
        public Builder tokenId(String tokenId) {
            return tokenId(Output.of(tokenId));
        }

        public TokenIntegrationState build() {
            return $;
        }
    }

}
