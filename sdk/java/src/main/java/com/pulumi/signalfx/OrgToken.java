// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.signalfx.OrgTokenArgs;
import com.pulumi.signalfx.Utilities;
import com.pulumi.signalfx.inputs.OrgTokenState;
import com.pulumi.signalfx.outputs.OrgTokenDpmLimits;
import com.pulumi.signalfx.outputs.OrgTokenHostOrUsageLimits;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manage SignalFx org tokens.
 * 
 * &gt; **NOTE** When managing Org tokens, use a session token of an administrator to authenticate the SignalFx provider. See [Operations that require a session token for an administrator](https://dev.splunk.com/observability/docs/administration/authtokens#Operations-that-require-a-session-token-for-an-administrator).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.signalfx.OrgToken;
 * import com.pulumi.signalfx.OrgTokenArgs;
 * import com.pulumi.signalfx.inputs.OrgTokenHostOrUsageLimitsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myteamkey0 = new OrgToken(&#34;myteamkey0&#34;, OrgTokenArgs.builder()        
 *             .description(&#34;My team&#39;s rad key&#34;)
 *             .hostOrUsageLimits(OrgTokenHostOrUsageLimitsArgs.builder()
 *                 .containerLimit(200)
 *                 .containerNotificationThreshold(180)
 *                 .customMetricsLimit(1000)
 *                 .customMetricsNotificationThreshold(900)
 *                 .highResMetricsLimit(1000)
 *                 .highResMetricsNotificationThreshold(900)
 *                 .hostLimit(100)
 *                 .hostNotificationThreshold(90)
 *                 .build())
 *             .notifications(&#34;Email,foo-alerts@bar.com&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="signalfx:index/orgToken:OrgToken")
public class OrgToken extends com.pulumi.resources.CustomResource {
    /**
     * Authentication scope, ex: INGEST, API, RUM ... (Optional)
     * 
     */
    @Export(name="authScopes", type=List.class, parameters={String.class})
    private Output<List<String>> authScopes;

    /**
     * @return Authentication scope, ex: INGEST, API, RUM ... (Optional)
     * 
     */
    public Output<List<String>> authScopes() {
        return this.authScopes;
    }
    /**
     * Description of the token.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the token.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Flag that controls enabling the token. If set to `true`, the token is disabled, and you can&#39;t use it for authentication. Defaults to `false`.
     * 
     */
    @Export(name="disabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> disabled;

    /**
     * @return Flag that controls enabling the token. If set to `true`, the token is disabled, and you can&#39;t use it for authentication. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> disabled() {
        return Codegen.optional(this.disabled);
    }
    /**
     * Specify DPM-based limits for this token.
     * 
     */
    @Export(name="dpmLimits", type=OrgTokenDpmLimits.class, parameters={})
    private Output</* @Nullable */ OrgTokenDpmLimits> dpmLimits;

    /**
     * @return Specify DPM-based limits for this token.
     * 
     */
    public Output<Optional<OrgTokenDpmLimits>> dpmLimits() {
        return Codegen.optional(this.dpmLimits);
    }
    /**
     * Specify Usage-based limits for this token.
     * 
     */
    @Export(name="hostOrUsageLimits", type=OrgTokenHostOrUsageLimits.class, parameters={})
    private Output</* @Nullable */ OrgTokenHostOrUsageLimits> hostOrUsageLimits;

    /**
     * @return Specify Usage-based limits for this token.
     * 
     */
    public Output<Optional<OrgTokenHostOrUsageLimits>> hostOrUsageLimits() {
        return Codegen.optional(this.hostOrUsageLimits);
    }
    /**
     * Name of the token.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the token.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Where to send notifications about this token&#39;s limits. Please consult the Notification Format laid out in detectors.
     * 
     */
    @Export(name="notifications", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> notifications;

    /**
     * @return Where to send notifications about this token&#39;s limits. Please consult the Notification Format laid out in detectors.
     * 
     */
    public Output<Optional<List<String>>> notifications() {
        return Codegen.optional(this.notifications);
    }
    /**
     * The secret token created by the API. You cannot set this value.
     * 
     */
    @Export(name="secret", type=String.class, parameters={})
    private Output<String> secret;

    /**
     * @return The secret token created by the API. You cannot set this value.
     * 
     */
    public Output<String> secret() {
        return this.secret;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OrgToken(String name) {
        this(name, OrgTokenArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OrgToken(String name, @Nullable OrgTokenArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OrgToken(String name, @Nullable OrgTokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:index/orgToken:OrgToken", name, args == null ? OrgTokenArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private OrgToken(String name, Output<String> id, @Nullable OrgTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("signalfx:index/orgToken:OrgToken", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "secret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OrgToken get(String name, Output<String> id, @Nullable OrgTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OrgToken(name, id, state, options);
    }
}
