// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.gcp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class IntegrationProjectServiceKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationProjectServiceKeyArgs Empty = new IntegrationProjectServiceKeyArgs();

    @Import(name="projectId", required=true)
    private Output<String> projectId;

    public Output<String> projectId() {
        return this.projectId;
    }

    @Import(name="projectKey", required=true)
    private Output<String> projectKey;

    public Output<String> projectKey() {
        return this.projectKey;
    }

    private IntegrationProjectServiceKeyArgs() {}

    private IntegrationProjectServiceKeyArgs(IntegrationProjectServiceKeyArgs $) {
        this.projectId = $.projectId;
        this.projectKey = $.projectKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationProjectServiceKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationProjectServiceKeyArgs $;

        public Builder() {
            $ = new IntegrationProjectServiceKeyArgs();
        }

        public Builder(IntegrationProjectServiceKeyArgs defaults) {
            $ = new IntegrationProjectServiceKeyArgs(Objects.requireNonNull(defaults));
        }

        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public Builder projectKey(Output<String> projectKey) {
            $.projectKey = projectKey;
            return this;
        }

        public Builder projectKey(String projectKey) {
            return projectKey(Output.of(projectKey));
        }

        public IntegrationProjectServiceKeyArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("IntegrationProjectServiceKeyArgs", "projectId");
            }
            if ($.projectKey == null) {
                throw new MissingRequiredPropertyException("IntegrationProjectServiceKeyArgs", "projectKey");
            }
            return $;
        }
    }

}
