// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.aws;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.signalfx.aws.inputs.IntegrationCustomNamespaceSyncRuleArgs;
import com.pulumi.signalfx.aws.inputs.IntegrationMetricStatsToSyncArgs;
import com.pulumi.signalfx.aws.inputs.IntegrationNamespaceSyncRuleArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationArgs Empty = new IntegrationArgs();

    /**
     * The integration will only ingest the recommended statistics published by AWS
     * 
     */
    @Import(name="collectOnlyRecommendedStats")
    private @Nullable Output<Boolean> collectOnlyRecommendedStats;

    /**
     * @return The integration will only ingest the recommended statistics published by AWS
     * 
     */
    public Optional<Output<Boolean>> collectOnlyRecommendedStats() {
        return Optional.ofNullable(this.collectOnlyRecommendedStats);
    }

    /**
     * List of custom AWS CloudWatch namespaces to monitor. Custom namespaces contain custom metrics that you define in AWS; Splunk Observability Cloud imports the metrics so you can monitor them.
     * 
     */
    @Import(name="customCloudwatchNamespaces")
    private @Nullable Output<List<String>> customCloudwatchNamespaces;

    /**
     * @return List of custom AWS CloudWatch namespaces to monitor. Custom namespaces contain custom metrics that you define in AWS; Splunk Observability Cloud imports the metrics so you can monitor them.
     * 
     */
    public Optional<Output<List<String>>> customCloudwatchNamespaces() {
        return Optional.ofNullable(this.customCloudwatchNamespaces);
    }

    /**
     * Each element controls the data collected by Splunk Observability Cloud for the specified namespace. Conflicts with the `custom_cloudwatch_namespaces` property.
     * 
     */
    @Import(name="customNamespaceSyncRules")
    private @Nullable Output<List<IntegrationCustomNamespaceSyncRuleArgs>> customNamespaceSyncRules;

    /**
     * @return Each element controls the data collected by Splunk Observability Cloud for the specified namespace. Conflicts with the `custom_cloudwatch_namespaces` property.
     * 
     */
    public Optional<Output<List<IntegrationCustomNamespaceSyncRuleArgs>>> customNamespaceSyncRules() {
        return Optional.ofNullable(this.customNamespaceSyncRules);
    }

    /**
     * Flag that controls how Splunk Observability Cloud imports usage metrics from AWS to use with AWS Cost Optimizer. If `true`, Splunk Observability Cloud imports the metrics.
     * 
     */
    @Import(name="enableAwsUsage")
    private @Nullable Output<Boolean> enableAwsUsage;

    /**
     * @return Flag that controls how Splunk Observability Cloud imports usage metrics from AWS to use with AWS Cost Optimizer. If `true`, Splunk Observability Cloud imports the metrics.
     * 
     */
    public Optional<Output<Boolean>> enableAwsUsage() {
        return Optional.ofNullable(this.enableAwsUsage);
    }

    /**
     * Controls how Splunk Observability Cloud checks for large amounts of data for this AWS integration. If `true`, Splunk Observability Cloud monitors the amount of data coming in from the integration.
     * 
     */
    @Import(name="enableCheckLargeVolume")
    private @Nullable Output<Boolean> enableCheckLargeVolume;

    /**
     * @return Controls how Splunk Observability Cloud checks for large amounts of data for this AWS integration. If `true`, Splunk Observability Cloud monitors the amount of data coming in from the integration.
     * 
     */
    public Optional<Output<Boolean>> enableCheckLargeVolume() {
        return Optional.ofNullable(this.enableCheckLargeVolume);
    }

    /**
     * Enable the AWS logs synchronization. Note that this requires the inclusion of `&#34;logs:DescribeLogGroups&#34;`, `&#34;logs:DeleteSubscriptionFilter&#34;`, `&#34;logs:DescribeSubscriptionFilters&#34;`, `&#34;logs:PutSubscriptionFilter&#34;`, and `&#34;s3:GetBucketLogging&#34;`, `&#34;s3:GetBucketNotification&#34;`, `&#34;s3:PutBucketNotification&#34;` permissions. Additional permissions may be required to capture logs from specific AWS services.
     * 
     */
    @Import(name="enableLogsSync")
    private @Nullable Output<Boolean> enableLogsSync;

    /**
     * @return Enable the AWS logs synchronization. Note that this requires the inclusion of `&#34;logs:DescribeLogGroups&#34;`, `&#34;logs:DeleteSubscriptionFilter&#34;`, `&#34;logs:DescribeSubscriptionFilters&#34;`, `&#34;logs:PutSubscriptionFilter&#34;`, and `&#34;s3:GetBucketLogging&#34;`, `&#34;s3:GetBucketNotification&#34;`, `&#34;s3:PutBucketNotification&#34;` permissions. Additional permissions may be required to capture logs from specific AWS services.
     * 
     */
    public Optional<Output<Boolean>> enableLogsSync() {
        return Optional.ofNullable(this.enableLogsSync);
    }

    /**
     * Whether the integration is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether the integration is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The `external_id` property from one of a `signalfx.aws.ExternalIntegration` or `signalfx.aws.TokenIntegration`
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return The `external_id` property from one of a `signalfx.aws.ExternalIntegration` or `signalfx.aws.TokenIntegration`
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * Flag that controls how Splunk Observability Cloud imports Cloud Watch metrics. If true, Splunk Observability Cloud imports Cloud Watch metrics from AWS.
     * 
     */
    @Import(name="importCloudWatch")
    private @Nullable Output<Boolean> importCloudWatch;

    /**
     * @return Flag that controls how Splunk Observability Cloud imports Cloud Watch metrics. If true, Splunk Observability Cloud imports Cloud Watch metrics from AWS.
     * 
     */
    public Optional<Output<Boolean>> importCloudWatch() {
        return Optional.ofNullable(this.importCloudWatch);
    }

    /**
     * The id of one of a `signalfx.aws.ExternalIntegration` or `signalfx.aws.TokenIntegration`.
     * 
     */
    @Import(name="integrationId", required=true)
    private Output<String> integrationId;

    /**
     * @return The id of one of a `signalfx.aws.ExternalIntegration` or `signalfx.aws.TokenIntegration`.
     * 
     */
    public Output<String> integrationId() {
        return this.integrationId;
    }

    /**
     * If you specify `auth_method = \&#34;SecurityToken\&#34;` in your request to create an AWS integration object, use this property to specify the key (this is typically equivalent to the `AWS_SECRET_ACCESS_KEY` environment variable).
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return If you specify `auth_method = \&#34;SecurityToken\&#34;` in your request to create an AWS integration object, use this property to specify the key (this is typically equivalent to the `AWS_SECRET_ACCESS_KEY` environment variable).
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Each element in the array is an object that contains an AWS namespace name, AWS metric name and a list of statistics that Splunk Observability Cloud collects for this metric. If you specify this property, Splunk Observability Cloud retrieves only specified AWS statistics when AWS metric streams are not used. When AWS metric streams are used this property specifies additional extended statistics to collect (please note that AWS metric streams API supports percentile stats only; other stats are ignored). If you don&#39;t specify this property, Splunk Observability Cloud retrieves the AWS standard set of statistics.
     * 
     */
    @Import(name="metricStatsToSyncs")
    private @Nullable Output<List<IntegrationMetricStatsToSyncArgs>> metricStatsToSyncs;

    /**
     * @return Each element in the array is an object that contains an AWS namespace name, AWS metric name and a list of statistics that Splunk Observability Cloud collects for this metric. If you specify this property, Splunk Observability Cloud retrieves only specified AWS statistics when AWS metric streams are not used. When AWS metric streams are used this property specifies additional extended statistics to collect (please note that AWS metric streams API supports percentile stats only; other stats are ignored). If you don&#39;t specify this property, Splunk Observability Cloud retrieves the AWS standard set of statistics.
     * 
     */
    public Optional<Output<List<IntegrationMetricStatsToSyncArgs>>> metricStatsToSyncs() {
        return Optional.ofNullable(this.metricStatsToSyncs);
    }

    /**
     * If set to true, Splunk Observability Cloud accepts data from Metric Streams managed from the AWS console. The AWS account sending the Metric Streams and the AWS account in the Splunk Observability Cloud integration have to match. Requires `use_metric_streams_sync` set to true to work.
     * 
     */
    @Import(name="metricStreamsManagedExternally")
    private @Nullable Output<Boolean> metricStreamsManagedExternally;

    /**
     * @return If set to true, Splunk Observability Cloud accepts data from Metric Streams managed from the AWS console. The AWS account sending the Metric Streams and the AWS account in the Splunk Observability Cloud integration have to match. Requires `use_metric_streams_sync` set to true to work.
     * 
     */
    public Optional<Output<Boolean>> metricStreamsManagedExternally() {
        return Optional.ofNullable(this.metricStreamsManagedExternally);
    }

    /**
     * Name of the org token to be used for data ingestion. If not specified then default access token is used.
     * 
     */
    @Import(name="namedToken")
    private @Nullable Output<String> namedToken;

    /**
     * @return Name of the org token to be used for data ingestion. If not specified then default access token is used.
     * 
     */
    public Optional<Output<String>> namedToken() {
        return Optional.ofNullable(this.namedToken);
    }

    /**
     * Each element in the array is an object that contains an AWS namespace name and a filter that controls the data that Splunk Observability Cloud collects for the namespace. Conflicts with the `services` property. If you don&#39;t specify either property, Splunk Observability Cloud syncs all data in all AWS namespaces.
     * 
     */
    @Import(name="namespaceSyncRules")
    private @Nullable Output<List<IntegrationNamespaceSyncRuleArgs>> namespaceSyncRules;

    /**
     * @return Each element in the array is an object that contains an AWS namespace name and a filter that controls the data that Splunk Observability Cloud collects for the namespace. Conflicts with the `services` property. If you don&#39;t specify either property, Splunk Observability Cloud syncs all data in all AWS namespaces.
     * 
     */
    public Optional<Output<List<IntegrationNamespaceSyncRuleArgs>>> namespaceSyncRules() {
        return Optional.ofNullable(this.namespaceSyncRules);
    }

    /**
     * AWS poll rate (in seconds). Value between `60` and `600`. Default: `300`.
     * 
     */
    @Import(name="pollRate")
    private @Nullable Output<Integer> pollRate;

    /**
     * @return AWS poll rate (in seconds). Value between `60` and `600`. Default: `300`.
     * 
     */
    public Optional<Output<Integer>> pollRate() {
        return Optional.ofNullable(this.pollRate);
    }

    /**
     * List of AWS regions that Splunk Observability Cloud should monitor. It cannot be empty.
     * 
     */
    @Import(name="regions", required=true)
    private Output<List<String>> regions;

    /**
     * @return List of AWS regions that Splunk Observability Cloud should monitor. It cannot be empty.
     * 
     */
    public Output<List<String>> regions() {
        return this.regions;
    }

    /**
     * Role ARN that you add to an existing AWS integration object. **Note**: Ensure you use the `arn` property of your role, not the id!
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return Role ARN that you add to an existing AWS integration object. **Note**: Ensure you use the `arn` property of your role, not the id!
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * List of AWS services that you want Splunk Observability Cloud to monitor. Each element is a string designating an AWS service. Can be an empty list to import data for all supported services. Conflicts with `namespace_sync_rule`. See [Amazon Web Services](https://docs.splunk.com/Observability/gdi/get-data-in/integrations.html#amazon-web-services) for a list of valid values.
     * 
     */
    @Import(name="services")
    private @Nullable Output<List<String>> services;

    /**
     * @return List of AWS services that you want Splunk Observability Cloud to monitor. Each element is a string designating an AWS service. Can be an empty list to import data for all supported services. Conflicts with `namespace_sync_rule`. See [Amazon Web Services](https://docs.splunk.com/Observability/gdi/get-data-in/integrations.html#amazon-web-services) for a list of valid values.
     * 
     */
    public Optional<Output<List<String>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * Indicates that Splunk Observability Cloud should sync metrics and metadata from custom AWS namespaces only (see the `custom_namespace_sync_rule` above). Defaults to `false`.
     * 
     */
    @Import(name="syncCustomNamespacesOnly")
    private @Nullable Output<Boolean> syncCustomNamespacesOnly;

    /**
     * @return Indicates that Splunk Observability Cloud should sync metrics and metadata from custom AWS namespaces only (see the `custom_namespace_sync_rule` above). Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> syncCustomNamespacesOnly() {
        return Optional.ofNullable(this.syncCustomNamespacesOnly);
    }

    /**
     * If you specify `auth_method = \&#34;SecurityToken\&#34;` in your request to create an AWS integration object, use this property to specify the token (this is typically equivalent to the `AWS_ACCESS_KEY_ID` environment variable).
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return If you specify `auth_method = \&#34;SecurityToken\&#34;` in your request to create an AWS integration object, use this property to specify the token (this is typically equivalent to the `AWS_ACCESS_KEY_ID` environment variable).
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    /**
     * Enable the use of Amazon Cloudwatch Metric Streams for ingesting metrics.&lt;br&gt; Note that this requires the inclusion of `&#34;cloudwatch:ListMetricStreams&#34;`,`&#34;cloudwatch:GetMetricStream&#34;`, `&#34;cloudwatch:PutMetricStream&#34;`, `&#34;cloudwatch:DeleteMetricStream&#34;`, `&#34;cloudwatch:StartMetricStreams&#34;`, `&#34;cloudwatch:StopMetricStreams&#34;` and `&#34;iam:PassRole&#34;` permissions.&lt;br&gt; Note you need to deploy additional resources on your AWS account to enable CloudWatch metrics streaming. Select one of the [CloudFormation templates](https://docs.splunk.com/Observability/gdi/get-data-in/connect/aws/aws-cloudformation.html) to deploy all the required resources.
     * 
     */
    @Import(name="useMetricStreamsSync")
    private @Nullable Output<Boolean> useMetricStreamsSync;

    /**
     * @return Enable the use of Amazon Cloudwatch Metric Streams for ingesting metrics.&lt;br&gt; Note that this requires the inclusion of `&#34;cloudwatch:ListMetricStreams&#34;`,`&#34;cloudwatch:GetMetricStream&#34;`, `&#34;cloudwatch:PutMetricStream&#34;`, `&#34;cloudwatch:DeleteMetricStream&#34;`, `&#34;cloudwatch:StartMetricStreams&#34;`, `&#34;cloudwatch:StopMetricStreams&#34;` and `&#34;iam:PassRole&#34;` permissions.&lt;br&gt; Note you need to deploy additional resources on your AWS account to enable CloudWatch metrics streaming. Select one of the [CloudFormation templates](https://docs.splunk.com/Observability/gdi/get-data-in/connect/aws/aws-cloudformation.html) to deploy all the required resources.
     * 
     */
    public Optional<Output<Boolean>> useMetricStreamsSync() {
        return Optional.ofNullable(this.useMetricStreamsSync);
    }

    private IntegrationArgs() {}

    private IntegrationArgs(IntegrationArgs $) {
        this.collectOnlyRecommendedStats = $.collectOnlyRecommendedStats;
        this.customCloudwatchNamespaces = $.customCloudwatchNamespaces;
        this.customNamespaceSyncRules = $.customNamespaceSyncRules;
        this.enableAwsUsage = $.enableAwsUsage;
        this.enableCheckLargeVolume = $.enableCheckLargeVolume;
        this.enableLogsSync = $.enableLogsSync;
        this.enabled = $.enabled;
        this.externalId = $.externalId;
        this.importCloudWatch = $.importCloudWatch;
        this.integrationId = $.integrationId;
        this.key = $.key;
        this.metricStatsToSyncs = $.metricStatsToSyncs;
        this.metricStreamsManagedExternally = $.metricStreamsManagedExternally;
        this.namedToken = $.namedToken;
        this.namespaceSyncRules = $.namespaceSyncRules;
        this.pollRate = $.pollRate;
        this.regions = $.regions;
        this.roleArn = $.roleArn;
        this.services = $.services;
        this.syncCustomNamespacesOnly = $.syncCustomNamespacesOnly;
        this.token = $.token;
        this.useMetricStreamsSync = $.useMetricStreamsSync;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationArgs $;

        public Builder() {
            $ = new IntegrationArgs();
        }

        public Builder(IntegrationArgs defaults) {
            $ = new IntegrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param collectOnlyRecommendedStats The integration will only ingest the recommended statistics published by AWS
         * 
         * @return builder
         * 
         */
        public Builder collectOnlyRecommendedStats(@Nullable Output<Boolean> collectOnlyRecommendedStats) {
            $.collectOnlyRecommendedStats = collectOnlyRecommendedStats;
            return this;
        }

        /**
         * @param collectOnlyRecommendedStats The integration will only ingest the recommended statistics published by AWS
         * 
         * @return builder
         * 
         */
        public Builder collectOnlyRecommendedStats(Boolean collectOnlyRecommendedStats) {
            return collectOnlyRecommendedStats(Output.of(collectOnlyRecommendedStats));
        }

        /**
         * @param customCloudwatchNamespaces List of custom AWS CloudWatch namespaces to monitor. Custom namespaces contain custom metrics that you define in AWS; Splunk Observability Cloud imports the metrics so you can monitor them.
         * 
         * @return builder
         * 
         */
        public Builder customCloudwatchNamespaces(@Nullable Output<List<String>> customCloudwatchNamespaces) {
            $.customCloudwatchNamespaces = customCloudwatchNamespaces;
            return this;
        }

        /**
         * @param customCloudwatchNamespaces List of custom AWS CloudWatch namespaces to monitor. Custom namespaces contain custom metrics that you define in AWS; Splunk Observability Cloud imports the metrics so you can monitor them.
         * 
         * @return builder
         * 
         */
        public Builder customCloudwatchNamespaces(List<String> customCloudwatchNamespaces) {
            return customCloudwatchNamespaces(Output.of(customCloudwatchNamespaces));
        }

        /**
         * @param customCloudwatchNamespaces List of custom AWS CloudWatch namespaces to monitor. Custom namespaces contain custom metrics that you define in AWS; Splunk Observability Cloud imports the metrics so you can monitor them.
         * 
         * @return builder
         * 
         */
        public Builder customCloudwatchNamespaces(String... customCloudwatchNamespaces) {
            return customCloudwatchNamespaces(List.of(customCloudwatchNamespaces));
        }

        /**
         * @param customNamespaceSyncRules Each element controls the data collected by Splunk Observability Cloud for the specified namespace. Conflicts with the `custom_cloudwatch_namespaces` property.
         * 
         * @return builder
         * 
         */
        public Builder customNamespaceSyncRules(@Nullable Output<List<IntegrationCustomNamespaceSyncRuleArgs>> customNamespaceSyncRules) {
            $.customNamespaceSyncRules = customNamespaceSyncRules;
            return this;
        }

        /**
         * @param customNamespaceSyncRules Each element controls the data collected by Splunk Observability Cloud for the specified namespace. Conflicts with the `custom_cloudwatch_namespaces` property.
         * 
         * @return builder
         * 
         */
        public Builder customNamespaceSyncRules(List<IntegrationCustomNamespaceSyncRuleArgs> customNamespaceSyncRules) {
            return customNamespaceSyncRules(Output.of(customNamespaceSyncRules));
        }

        /**
         * @param customNamespaceSyncRules Each element controls the data collected by Splunk Observability Cloud for the specified namespace. Conflicts with the `custom_cloudwatch_namespaces` property.
         * 
         * @return builder
         * 
         */
        public Builder customNamespaceSyncRules(IntegrationCustomNamespaceSyncRuleArgs... customNamespaceSyncRules) {
            return customNamespaceSyncRules(List.of(customNamespaceSyncRules));
        }

        /**
         * @param enableAwsUsage Flag that controls how Splunk Observability Cloud imports usage metrics from AWS to use with AWS Cost Optimizer. If `true`, Splunk Observability Cloud imports the metrics.
         * 
         * @return builder
         * 
         */
        public Builder enableAwsUsage(@Nullable Output<Boolean> enableAwsUsage) {
            $.enableAwsUsage = enableAwsUsage;
            return this;
        }

        /**
         * @param enableAwsUsage Flag that controls how Splunk Observability Cloud imports usage metrics from AWS to use with AWS Cost Optimizer. If `true`, Splunk Observability Cloud imports the metrics.
         * 
         * @return builder
         * 
         */
        public Builder enableAwsUsage(Boolean enableAwsUsage) {
            return enableAwsUsage(Output.of(enableAwsUsage));
        }

        /**
         * @param enableCheckLargeVolume Controls how Splunk Observability Cloud checks for large amounts of data for this AWS integration. If `true`, Splunk Observability Cloud monitors the amount of data coming in from the integration.
         * 
         * @return builder
         * 
         */
        public Builder enableCheckLargeVolume(@Nullable Output<Boolean> enableCheckLargeVolume) {
            $.enableCheckLargeVolume = enableCheckLargeVolume;
            return this;
        }

        /**
         * @param enableCheckLargeVolume Controls how Splunk Observability Cloud checks for large amounts of data for this AWS integration. If `true`, Splunk Observability Cloud monitors the amount of data coming in from the integration.
         * 
         * @return builder
         * 
         */
        public Builder enableCheckLargeVolume(Boolean enableCheckLargeVolume) {
            return enableCheckLargeVolume(Output.of(enableCheckLargeVolume));
        }

        /**
         * @param enableLogsSync Enable the AWS logs synchronization. Note that this requires the inclusion of `&#34;logs:DescribeLogGroups&#34;`, `&#34;logs:DeleteSubscriptionFilter&#34;`, `&#34;logs:DescribeSubscriptionFilters&#34;`, `&#34;logs:PutSubscriptionFilter&#34;`, and `&#34;s3:GetBucketLogging&#34;`, `&#34;s3:GetBucketNotification&#34;`, `&#34;s3:PutBucketNotification&#34;` permissions. Additional permissions may be required to capture logs from specific AWS services.
         * 
         * @return builder
         * 
         */
        public Builder enableLogsSync(@Nullable Output<Boolean> enableLogsSync) {
            $.enableLogsSync = enableLogsSync;
            return this;
        }

        /**
         * @param enableLogsSync Enable the AWS logs synchronization. Note that this requires the inclusion of `&#34;logs:DescribeLogGroups&#34;`, `&#34;logs:DeleteSubscriptionFilter&#34;`, `&#34;logs:DescribeSubscriptionFilters&#34;`, `&#34;logs:PutSubscriptionFilter&#34;`, and `&#34;s3:GetBucketLogging&#34;`, `&#34;s3:GetBucketNotification&#34;`, `&#34;s3:PutBucketNotification&#34;` permissions. Additional permissions may be required to capture logs from specific AWS services.
         * 
         * @return builder
         * 
         */
        public Builder enableLogsSync(Boolean enableLogsSync) {
            return enableLogsSync(Output.of(enableLogsSync));
        }

        /**
         * @param enabled Whether the integration is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the integration is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param externalId The `external_id` property from one of a `signalfx.aws.ExternalIntegration` or `signalfx.aws.TokenIntegration`
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId The `external_id` property from one of a `signalfx.aws.ExternalIntegration` or `signalfx.aws.TokenIntegration`
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param importCloudWatch Flag that controls how Splunk Observability Cloud imports Cloud Watch metrics. If true, Splunk Observability Cloud imports Cloud Watch metrics from AWS.
         * 
         * @return builder
         * 
         */
        public Builder importCloudWatch(@Nullable Output<Boolean> importCloudWatch) {
            $.importCloudWatch = importCloudWatch;
            return this;
        }

        /**
         * @param importCloudWatch Flag that controls how Splunk Observability Cloud imports Cloud Watch metrics. If true, Splunk Observability Cloud imports Cloud Watch metrics from AWS.
         * 
         * @return builder
         * 
         */
        public Builder importCloudWatch(Boolean importCloudWatch) {
            return importCloudWatch(Output.of(importCloudWatch));
        }

        /**
         * @param integrationId The id of one of a `signalfx.aws.ExternalIntegration` or `signalfx.aws.TokenIntegration`.
         * 
         * @return builder
         * 
         */
        public Builder integrationId(Output<String> integrationId) {
            $.integrationId = integrationId;
            return this;
        }

        /**
         * @param integrationId The id of one of a `signalfx.aws.ExternalIntegration` or `signalfx.aws.TokenIntegration`.
         * 
         * @return builder
         * 
         */
        public Builder integrationId(String integrationId) {
            return integrationId(Output.of(integrationId));
        }

        /**
         * @param key If you specify `auth_method = \&#34;SecurityToken\&#34;` in your request to create an AWS integration object, use this property to specify the key (this is typically equivalent to the `AWS_SECRET_ACCESS_KEY` environment variable).
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key If you specify `auth_method = \&#34;SecurityToken\&#34;` in your request to create an AWS integration object, use this property to specify the key (this is typically equivalent to the `AWS_SECRET_ACCESS_KEY` environment variable).
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param metricStatsToSyncs Each element in the array is an object that contains an AWS namespace name, AWS metric name and a list of statistics that Splunk Observability Cloud collects for this metric. If you specify this property, Splunk Observability Cloud retrieves only specified AWS statistics when AWS metric streams are not used. When AWS metric streams are used this property specifies additional extended statistics to collect (please note that AWS metric streams API supports percentile stats only; other stats are ignored). If you don&#39;t specify this property, Splunk Observability Cloud retrieves the AWS standard set of statistics.
         * 
         * @return builder
         * 
         */
        public Builder metricStatsToSyncs(@Nullable Output<List<IntegrationMetricStatsToSyncArgs>> metricStatsToSyncs) {
            $.metricStatsToSyncs = metricStatsToSyncs;
            return this;
        }

        /**
         * @param metricStatsToSyncs Each element in the array is an object that contains an AWS namespace name, AWS metric name and a list of statistics that Splunk Observability Cloud collects for this metric. If you specify this property, Splunk Observability Cloud retrieves only specified AWS statistics when AWS metric streams are not used. When AWS metric streams are used this property specifies additional extended statistics to collect (please note that AWS metric streams API supports percentile stats only; other stats are ignored). If you don&#39;t specify this property, Splunk Observability Cloud retrieves the AWS standard set of statistics.
         * 
         * @return builder
         * 
         */
        public Builder metricStatsToSyncs(List<IntegrationMetricStatsToSyncArgs> metricStatsToSyncs) {
            return metricStatsToSyncs(Output.of(metricStatsToSyncs));
        }

        /**
         * @param metricStatsToSyncs Each element in the array is an object that contains an AWS namespace name, AWS metric name and a list of statistics that Splunk Observability Cloud collects for this metric. If you specify this property, Splunk Observability Cloud retrieves only specified AWS statistics when AWS metric streams are not used. When AWS metric streams are used this property specifies additional extended statistics to collect (please note that AWS metric streams API supports percentile stats only; other stats are ignored). If you don&#39;t specify this property, Splunk Observability Cloud retrieves the AWS standard set of statistics.
         * 
         * @return builder
         * 
         */
        public Builder metricStatsToSyncs(IntegrationMetricStatsToSyncArgs... metricStatsToSyncs) {
            return metricStatsToSyncs(List.of(metricStatsToSyncs));
        }

        /**
         * @param metricStreamsManagedExternally If set to true, Splunk Observability Cloud accepts data from Metric Streams managed from the AWS console. The AWS account sending the Metric Streams and the AWS account in the Splunk Observability Cloud integration have to match. Requires `use_metric_streams_sync` set to true to work.
         * 
         * @return builder
         * 
         */
        public Builder metricStreamsManagedExternally(@Nullable Output<Boolean> metricStreamsManagedExternally) {
            $.metricStreamsManagedExternally = metricStreamsManagedExternally;
            return this;
        }

        /**
         * @param metricStreamsManagedExternally If set to true, Splunk Observability Cloud accepts data from Metric Streams managed from the AWS console. The AWS account sending the Metric Streams and the AWS account in the Splunk Observability Cloud integration have to match. Requires `use_metric_streams_sync` set to true to work.
         * 
         * @return builder
         * 
         */
        public Builder metricStreamsManagedExternally(Boolean metricStreamsManagedExternally) {
            return metricStreamsManagedExternally(Output.of(metricStreamsManagedExternally));
        }

        /**
         * @param namedToken Name of the org token to be used for data ingestion. If not specified then default access token is used.
         * 
         * @return builder
         * 
         */
        public Builder namedToken(@Nullable Output<String> namedToken) {
            $.namedToken = namedToken;
            return this;
        }

        /**
         * @param namedToken Name of the org token to be used for data ingestion. If not specified then default access token is used.
         * 
         * @return builder
         * 
         */
        public Builder namedToken(String namedToken) {
            return namedToken(Output.of(namedToken));
        }

        /**
         * @param namespaceSyncRules Each element in the array is an object that contains an AWS namespace name and a filter that controls the data that Splunk Observability Cloud collects for the namespace. Conflicts with the `services` property. If you don&#39;t specify either property, Splunk Observability Cloud syncs all data in all AWS namespaces.
         * 
         * @return builder
         * 
         */
        public Builder namespaceSyncRules(@Nullable Output<List<IntegrationNamespaceSyncRuleArgs>> namespaceSyncRules) {
            $.namespaceSyncRules = namespaceSyncRules;
            return this;
        }

        /**
         * @param namespaceSyncRules Each element in the array is an object that contains an AWS namespace name and a filter that controls the data that Splunk Observability Cloud collects for the namespace. Conflicts with the `services` property. If you don&#39;t specify either property, Splunk Observability Cloud syncs all data in all AWS namespaces.
         * 
         * @return builder
         * 
         */
        public Builder namespaceSyncRules(List<IntegrationNamespaceSyncRuleArgs> namespaceSyncRules) {
            return namespaceSyncRules(Output.of(namespaceSyncRules));
        }

        /**
         * @param namespaceSyncRules Each element in the array is an object that contains an AWS namespace name and a filter that controls the data that Splunk Observability Cloud collects for the namespace. Conflicts with the `services` property. If you don&#39;t specify either property, Splunk Observability Cloud syncs all data in all AWS namespaces.
         * 
         * @return builder
         * 
         */
        public Builder namespaceSyncRules(IntegrationNamespaceSyncRuleArgs... namespaceSyncRules) {
            return namespaceSyncRules(List.of(namespaceSyncRules));
        }

        /**
         * @param pollRate AWS poll rate (in seconds). Value between `60` and `600`. Default: `300`.
         * 
         * @return builder
         * 
         */
        public Builder pollRate(@Nullable Output<Integer> pollRate) {
            $.pollRate = pollRate;
            return this;
        }

        /**
         * @param pollRate AWS poll rate (in seconds). Value between `60` and `600`. Default: `300`.
         * 
         * @return builder
         * 
         */
        public Builder pollRate(Integer pollRate) {
            return pollRate(Output.of(pollRate));
        }

        /**
         * @param regions List of AWS regions that Splunk Observability Cloud should monitor. It cannot be empty.
         * 
         * @return builder
         * 
         */
        public Builder regions(Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions List of AWS regions that Splunk Observability Cloud should monitor. It cannot be empty.
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions List of AWS regions that Splunk Observability Cloud should monitor. It cannot be empty.
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param roleArn Role ARN that you add to an existing AWS integration object. **Note**: Ensure you use the `arn` property of your role, not the id!
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn Role ARN that you add to an existing AWS integration object. **Note**: Ensure you use the `arn` property of your role, not the id!
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param services List of AWS services that you want Splunk Observability Cloud to monitor. Each element is a string designating an AWS service. Can be an empty list to import data for all supported services. Conflicts with `namespace_sync_rule`. See [Amazon Web Services](https://docs.splunk.com/Observability/gdi/get-data-in/integrations.html#amazon-web-services) for a list of valid values.
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<List<String>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services List of AWS services that you want Splunk Observability Cloud to monitor. Each element is a string designating an AWS service. Can be an empty list to import data for all supported services. Conflicts with `namespace_sync_rule`. See [Amazon Web Services](https://docs.splunk.com/Observability/gdi/get-data-in/integrations.html#amazon-web-services) for a list of valid values.
         * 
         * @return builder
         * 
         */
        public Builder services(List<String> services) {
            return services(Output.of(services));
        }

        /**
         * @param services List of AWS services that you want Splunk Observability Cloud to monitor. Each element is a string designating an AWS service. Can be an empty list to import data for all supported services. Conflicts with `namespace_sync_rule`. See [Amazon Web Services](https://docs.splunk.com/Observability/gdi/get-data-in/integrations.html#amazon-web-services) for a list of valid values.
         * 
         * @return builder
         * 
         */
        public Builder services(String... services) {
            return services(List.of(services));
        }

        /**
         * @param syncCustomNamespacesOnly Indicates that Splunk Observability Cloud should sync metrics and metadata from custom AWS namespaces only (see the `custom_namespace_sync_rule` above). Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder syncCustomNamespacesOnly(@Nullable Output<Boolean> syncCustomNamespacesOnly) {
            $.syncCustomNamespacesOnly = syncCustomNamespacesOnly;
            return this;
        }

        /**
         * @param syncCustomNamespacesOnly Indicates that Splunk Observability Cloud should sync metrics and metadata from custom AWS namespaces only (see the `custom_namespace_sync_rule` above). Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder syncCustomNamespacesOnly(Boolean syncCustomNamespacesOnly) {
            return syncCustomNamespacesOnly(Output.of(syncCustomNamespacesOnly));
        }

        /**
         * @param token If you specify `auth_method = \&#34;SecurityToken\&#34;` in your request to create an AWS integration object, use this property to specify the token (this is typically equivalent to the `AWS_ACCESS_KEY_ID` environment variable).
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token If you specify `auth_method = \&#34;SecurityToken\&#34;` in your request to create an AWS integration object, use this property to specify the token (this is typically equivalent to the `AWS_ACCESS_KEY_ID` environment variable).
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param useMetricStreamsSync Enable the use of Amazon Cloudwatch Metric Streams for ingesting metrics.&lt;br&gt; Note that this requires the inclusion of `&#34;cloudwatch:ListMetricStreams&#34;`,`&#34;cloudwatch:GetMetricStream&#34;`, `&#34;cloudwatch:PutMetricStream&#34;`, `&#34;cloudwatch:DeleteMetricStream&#34;`, `&#34;cloudwatch:StartMetricStreams&#34;`, `&#34;cloudwatch:StopMetricStreams&#34;` and `&#34;iam:PassRole&#34;` permissions.&lt;br&gt; Note you need to deploy additional resources on your AWS account to enable CloudWatch metrics streaming. Select one of the [CloudFormation templates](https://docs.splunk.com/Observability/gdi/get-data-in/connect/aws/aws-cloudformation.html) to deploy all the required resources.
         * 
         * @return builder
         * 
         */
        public Builder useMetricStreamsSync(@Nullable Output<Boolean> useMetricStreamsSync) {
            $.useMetricStreamsSync = useMetricStreamsSync;
            return this;
        }

        /**
         * @param useMetricStreamsSync Enable the use of Amazon Cloudwatch Metric Streams for ingesting metrics.&lt;br&gt; Note that this requires the inclusion of `&#34;cloudwatch:ListMetricStreams&#34;`,`&#34;cloudwatch:GetMetricStream&#34;`, `&#34;cloudwatch:PutMetricStream&#34;`, `&#34;cloudwatch:DeleteMetricStream&#34;`, `&#34;cloudwatch:StartMetricStreams&#34;`, `&#34;cloudwatch:StopMetricStreams&#34;` and `&#34;iam:PassRole&#34;` permissions.&lt;br&gt; Note you need to deploy additional resources on your AWS account to enable CloudWatch metrics streaming. Select one of the [CloudFormation templates](https://docs.splunk.com/Observability/gdi/get-data-in/connect/aws/aws-cloudformation.html) to deploy all the required resources.
         * 
         * @return builder
         * 
         */
        public Builder useMetricStreamsSync(Boolean useMetricStreamsSync) {
            return useMetricStreamsSync(Output.of(useMetricStreamsSync));
        }

        public IntegrationArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("IntegrationArgs", "enabled");
            }
            if ($.integrationId == null) {
                throw new MissingRequiredPropertyException("IntegrationArgs", "integrationId");
            }
            if ($.regions == null) {
                throw new MissingRequiredPropertyException("IntegrationArgs", "regions");
            }
            return $;
        }
    }

}
