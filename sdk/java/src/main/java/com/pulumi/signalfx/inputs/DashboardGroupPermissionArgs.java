// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardGroupPermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardGroupPermissionArgs Empty = new DashboardGroupPermissionArgs();

    @Import(name="actions")
    private @Nullable Output<List<String>> actions;

    public Optional<Output<List<String>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    @Import(name="principalId", required=true)
    private Output<String> principalId;

    public Output<String> principalId() {
        return this.principalId;
    }

    @Import(name="principalType", required=true)
    private Output<String> principalType;

    public Output<String> principalType() {
        return this.principalType;
    }

    private DashboardGroupPermissionArgs() {}

    private DashboardGroupPermissionArgs(DashboardGroupPermissionArgs $) {
        this.actions = $.actions;
        this.principalId = $.principalId;
        this.principalType = $.principalType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardGroupPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardGroupPermissionArgs $;

        public Builder() {
            $ = new DashboardGroupPermissionArgs();
        }

        public Builder(DashboardGroupPermissionArgs defaults) {
            $ = new DashboardGroupPermissionArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(@Nullable Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        public Builder principalId(Output<String> principalId) {
            $.principalId = principalId;
            return this;
        }

        public Builder principalId(String principalId) {
            return principalId(Output.of(principalId));
        }

        public Builder principalType(Output<String> principalType) {
            $.principalType = principalType;
            return this;
        }

        public Builder principalType(String principalType) {
            return principalType(Output.of(principalType));
        }

        public DashboardGroupPermissionArgs build() {
            if ($.principalId == null) {
                throw new MissingRequiredPropertyException("DashboardGroupPermissionArgs", "principalId");
            }
            if ($.principalType == null) {
                throw new MissingRequiredPropertyException("DashboardGroupPermissionArgs", "principalType");
            }
            return $;
        }
    }

}
