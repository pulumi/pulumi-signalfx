// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDimensionValuesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String query;
    private final List<String> values;

    @CustomType.Constructor
    private GetDimensionValuesResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("query") String query,
        @CustomType.Parameter("values") List<String> values) {
        this.id = id;
        this.query = query;
        this.values = values;
    }

    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String query() {
        return this.query;
    }
    public List<String> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDimensionValuesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String query;
        private List<String> values;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDimensionValuesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.query = defaults.query;
    	      this.values = defaults.values;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder query(String query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        public Builder values(List<String> values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }        public GetDimensionValuesResult build() {
            return new GetDimensionValuesResult(id, query, values);
        }
    }
}
