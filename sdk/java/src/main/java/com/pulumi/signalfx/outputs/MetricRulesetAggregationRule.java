// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.signalfx.outputs.MetricRulesetAggregationRuleAggregator;
import com.pulumi.signalfx.outputs.MetricRulesetAggregationRuleMatcher;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricRulesetAggregationRule {
    /**
     * @return Aggregator object
     * 
     */
    private List<MetricRulesetAggregationRuleAggregator> aggregators;
    /**
     * @return When false, this rule will not generate aggregated MTSs
     * 
     */
    private Boolean enabled;
    /**
     * @return Matcher object
     * 
     */
    private List<MetricRulesetAggregationRuleMatcher> matchers;
    /**
     * @return name of the aggregation rule
     * 
     */
    private @Nullable String name;

    private MetricRulesetAggregationRule() {}
    /**
     * @return Aggregator object
     * 
     */
    public List<MetricRulesetAggregationRuleAggregator> aggregators() {
        return this.aggregators;
    }
    /**
     * @return When false, this rule will not generate aggregated MTSs
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Matcher object
     * 
     */
    public List<MetricRulesetAggregationRuleMatcher> matchers() {
        return this.matchers;
    }
    /**
     * @return name of the aggregation rule
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricRulesetAggregationRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<MetricRulesetAggregationRuleAggregator> aggregators;
        private Boolean enabled;
        private List<MetricRulesetAggregationRuleMatcher> matchers;
        private @Nullable String name;
        public Builder() {}
        public Builder(MetricRulesetAggregationRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregators = defaults.aggregators;
    	      this.enabled = defaults.enabled;
    	      this.matchers = defaults.matchers;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder aggregators(List<MetricRulesetAggregationRuleAggregator> aggregators) {
            this.aggregators = Objects.requireNonNull(aggregators);
            return this;
        }
        public Builder aggregators(MetricRulesetAggregationRuleAggregator... aggregators) {
            return aggregators(List.of(aggregators));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder matchers(List<MetricRulesetAggregationRuleMatcher> matchers) {
            this.matchers = Objects.requireNonNull(matchers);
            return this;
        }
        public Builder matchers(MetricRulesetAggregationRuleMatcher... matchers) {
            return matchers(List.of(matchers));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public MetricRulesetAggregationRule build() {
            final var o = new MetricRulesetAggregationRule();
            o.aggregators = aggregators;
            o.enabled = enabled;
            o.matchers = matchers;
            o.name = name;
            return o;
        }
    }
}
