// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SloInput {
    /**
     * @return Label used in `program_text` that refers to the data block which contains the stream of successful events
     * 
     */
    private @Nullable String goodEventsLabel;
    /**
     * @return Signalflow program text for the SLO. More info at &#34;https://dev.splunk.com/observability/docs/signalflow&#34;. We require this Signalflow program text to contain at least 2 data blocks - one for the total stream and one for the good stream, whose labels are specified by goodEventsLabel and totalEventsLabel
     * 
     */
    private String programText;
    /**
     * @return Label used in `program_text` that refers to the data block which contains the stream of total events
     * 
     */
    private @Nullable String totalEventsLabel;

    private SloInput() {}
    /**
     * @return Label used in `program_text` that refers to the data block which contains the stream of successful events
     * 
     */
    public Optional<String> goodEventsLabel() {
        return Optional.ofNullable(this.goodEventsLabel);
    }
    /**
     * @return Signalflow program text for the SLO. More info at &#34;https://dev.splunk.com/observability/docs/signalflow&#34;. We require this Signalflow program text to contain at least 2 data blocks - one for the total stream and one for the good stream, whose labels are specified by goodEventsLabel and totalEventsLabel
     * 
     */
    public String programText() {
        return this.programText;
    }
    /**
     * @return Label used in `program_text` that refers to the data block which contains the stream of total events
     * 
     */
    public Optional<String> totalEventsLabel() {
        return Optional.ofNullable(this.totalEventsLabel);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SloInput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String goodEventsLabel;
        private String programText;
        private @Nullable String totalEventsLabel;
        public Builder() {}
        public Builder(SloInput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.goodEventsLabel = defaults.goodEventsLabel;
    	      this.programText = defaults.programText;
    	      this.totalEventsLabel = defaults.totalEventsLabel;
        }

        @CustomType.Setter
        public Builder goodEventsLabel(@Nullable String goodEventsLabel) {

            this.goodEventsLabel = goodEventsLabel;
            return this;
        }
        @CustomType.Setter
        public Builder programText(String programText) {
            if (programText == null) {
              throw new MissingRequiredPropertyException("SloInput", "programText");
            }
            this.programText = programText;
            return this;
        }
        @CustomType.Setter
        public Builder totalEventsLabel(@Nullable String totalEventsLabel) {

            this.totalEventsLabel = totalEventsLabel;
            return this;
        }
        public SloInput build() {
            final var _resultValue = new SloInput();
            _resultValue.goodEventsLabel = goodEventsLabel;
            _resultValue.programText = programText;
            _resultValue.totalEventsLabel = totalEventsLabel;
            return _resultValue;
        }
    }
}
