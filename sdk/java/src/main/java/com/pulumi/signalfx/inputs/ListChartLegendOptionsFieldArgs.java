// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.signalfx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListChartLegendOptionsFieldArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListChartLegendOptionsFieldArgs Empty = new ListChartLegendOptionsFieldArgs();

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="property", required=true)
    private Output<String> property;

    public Output<String> property() {
        return this.property;
    }

    private ListChartLegendOptionsFieldArgs() {}

    private ListChartLegendOptionsFieldArgs(ListChartLegendOptionsFieldArgs $) {
        this.enabled = $.enabled;
        this.property = $.property;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListChartLegendOptionsFieldArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListChartLegendOptionsFieldArgs $;

        public Builder() {
            $ = new ListChartLegendOptionsFieldArgs();
        }

        public Builder(ListChartLegendOptionsFieldArgs defaults) {
            $ = new ListChartLegendOptionsFieldArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder property(Output<String> property) {
            $.property = property;
            return this;
        }

        public Builder property(String property) {
            return property(Output.of(property));
        }

        public ListChartLegendOptionsFieldArgs build() {
            if ($.property == null) {
                throw new MissingRequiredPropertyException("ListChartLegendOptionsFieldArgs", "property");
            }
            return $;
        }
    }

}
